<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>问少的小站</title>
  
  <subtitle>Thoughts, stories and ideas.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://real-neo.me/"/>
  <updated>2019-05-03T23:14:03.348Z</updated>
  <id>https://real-neo.me/</id>
  
  <author>
    <name>问少</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二进制数中 1 的个数</title>
    <link href="https://real-neo.me/number-of-1-bits.html"/>
    <id>https://real-neo.me/number-of-1-bits.html</id>
    <published>2019-05-03T14:34:52.000Z</published>
    <updated>2019-05-03T23:14:03.348Z</updated>
    
    <content type="html"><![CDATA[<p>二进制数中 1 的个数这个问题可以说是很常见的基础问题了。</p><p>最简单最慢的方法就是转换成字符串查 1 的数量。</p><p>比较快的方法是使用位运算。</p><p>举例来说，整数 <code>35</code>，用二进制表示就是 <code>0000 0000 0010 0011</code>，二进制数中有 3 个 1。<br>计算这个数字中的 1 的个数，使用与运算便可以快速完成。<a id="more"></a></p><p>这里有个位运算的小知识，<code>n &amp; (n-1)</code> 可以消去二进制数的最右边的 1。<br>比如 <code>35 &amp; 34</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0000 0000 0010 0011</span><br><span class="line">0000 0000 0010 0010</span><br><span class="line">-------------------</span><br><span class="line">0000 0000 0010 0010</span><br></pre></td></tr></table></figure></p><p>结果得到 <code>34</code>，接下来 <code>34 &amp; 33</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0000 0000 0010 0010</span><br><span class="line">0000 0000 0010 0001</span><br><span class="line">-------------------</span><br><span class="line">0000 0000 0010 0000</span><br></pre></td></tr></table></figure></p><p>结果得到 <code>32</code>，接下来 <code>32 &amp; 31</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0000 0000 0010 0000</span><br><span class="line">0000 0000 0001 1111</span><br><span class="line">-------------------</span><br><span class="line">0000 0000 0000 0000</span><br></pre></td></tr></table></figure></p><p>结果得到 <code>0</code>，计算过程便完成了。</p><p>在得到 <code>0</code> 之前，一共计算了 3 次，也就是说一共消去了 3 个 1。<br>即，给定数字 <code>35</code>，得出结果为 <code>3</code>。</p><p>使用 C 语言表示以上算法：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!n)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> sum;</span><br><span class="line">    <span class="keyword">for</span> (sum = <span class="number">0</span>; n; sum++) &#123;</span><br><span class="line">        n &amp;= (n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二进制数中 1 的个数这个问题可以说是很常见的基础问题了。&lt;/p&gt;
&lt;p&gt;最简单最慢的方法就是转换成字符串查 1 的数量。&lt;/p&gt;
&lt;p&gt;比较快的方法是使用位运算。&lt;/p&gt;
&lt;p&gt;举例来说，整数 &lt;code&gt;35&lt;/code&gt;，用二进制表示就是 &lt;code&gt;0000 0000 0010 0011&lt;/code&gt;，二进制数中有 3 个 1。&lt;br&gt;计算这个数字中的 1 的个数，使用与运算便可以快速完成。
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Python" scheme="https://real-neo.me/tags/Python/"/>
    
      <category term="算法" scheme="https://real-neo.me/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>macOS 原生输入法设置自然码</title>
    <link href="https://real-neo.me/macOS-Input-Method-ZRM.html"/>
    <id>https://real-neo.me/macOS-Input-Method-ZRM.html</id>
    <published>2019-04-14T23:18:14.000Z</published>
    <updated>2019-04-14T22:46:38.298Z</updated>
    
    <content type="html"><![CDATA[<p>用了 macOS 一段时间了，一直使用的是搜狗输入法，因为系统自带的双拼输入法不支持自然码。</p><p>不过最近在网上看相关的双拼练习时，发现原来用过的<span class="exturl" data-url="aHR0cHM6Ly9hcGkuaWhpbnQubWUvc2h1YW5nLw==" title="https://api.ihint.me/shuang/">双拼练习<i class="fa fa-external-link"></i></span>的作者 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JsdWVTa3ktMDc=" title="https://github.com/BlueSky-07">@BlueSky<i class="fa fa-external-link"></i></span> 给出了提示，macOS 其实内置隐藏了双拼的自然码方案。</p><p>只需在终端内输入以下命令即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.inputmethod.CoreChineseEngineFramework shuangpinLayout 5</span><br></pre></td></tr></table></figure></p><p>在输入法偏好设置中会看到这样的效果：<br><img src="/uploads/2019/04/屏幕快照 2019-04-14 23.30.29.png" alt></p><p>此时即可使用自然码方案了。</p><p>附：系统为 macOS 10.14.4</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用了 macOS 一段时间了，一直使用的是搜狗输入法，因为系统自带的双拼输入法不支持自然码。&lt;/p&gt;
&lt;p&gt;不过最近在网上看相关的双拼练习时，发现原来用过的&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9hcGkuaWhpbnQubWUv
      
    
    </summary>
    
      <category term="Tips" scheme="https://real-neo.me/categories/Tips/"/>
    
    
      <category term="macOS" scheme="https://real-neo.me/tags/macOS/"/>
    
      <category term="双拼" scheme="https://real-neo.me/tags/%E5%8F%8C%E6%8B%BC/"/>
    
      <category term="自然码" scheme="https://real-neo.me/tags/%E8%87%AA%E7%84%B6%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>使用 GPG 签名你的 Commits</title>
    <link href="https://real-neo.me/Git-GPG-Signing-Commits.html"/>
    <id>https://real-neo.me/Git-GPG-Signing-Commits.html</id>
    <published>2019-03-15T16:37:08.000Z</published>
    <updated>2019-03-16T04:35:01.776Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <p>本文最后更新于 2019年3月15日 可能会因为没有更新而失效。如已失效或需要修正，请留言！</p>          </div><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先要安装好 GPG 工具。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install gnupg gnupg2 pinentry-mac</span><br></pre></td></tr></table></figure></p><p>配置使用环境。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">test</span> -r ~/.bash_profile &amp;&amp; <span class="built_in">echo</span> <span class="string">'export GPG_TTY=$(tty)'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'export GPG_TTY=$(tty)'</span> &gt;&gt; ~/.profile</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"pinentry-program /usr/local/bin/pinentry-mac"</span> &gt;&gt; ~/.gnupg/gpg-agent.conf</span><br><span class="line"></span><br><span class="line">$ killall gpg-agent</span><br></pre></td></tr></table></figure></p><h2 id="检查现有的-GPG-秘钥"><a href="#检查现有的-GPG-秘钥" class="headerlink" title="检查现有的 GPG 秘钥"></a>检查现有的 GPG 秘钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gpg --list-secret-keys --keyid-format LONG</span><br></pre></td></tr></table></figure><p>如果没有返回值，则说明此电脑上没有配置 GPG 秘钥。<br>如果有，则可以跳过生成 GPG 秘钥的步骤。<a id="more"></a></p><h2 id="生成一个新的-GPG-秘钥"><a href="#生成一个新的-GPG-秘钥" class="headerlink" title="生成一个新的 GPG 秘钥"></a>生成一个新的 GPG 秘钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gpg --full-generate-key</span><br></pre></td></tr></table></figure><p>第一步，选择加密类型，可以直接回车选择默认的 <code>RSA and RSA</code>。<br>第二步，输入秘钥的强度，推荐输入 <code>4096</code>。<br>第三步，选择秘钥的过期时间，嫌麻烦的同学可以直接回车选择默认的永不过期。<br>第四步，确认一下以上信息有没有错。<br>第五步，输入你的名字。<br>第六步，输入你的邮箱，注意此邮箱需要是你的 Github 账号中添加过的邮箱。<br>第七步，设置此秘钥的密码，使用此秘钥需要用这个密码来解密。<br>之后稍等片刻，GPG 秘钥即生成完毕。</p><h2 id="使用-GPG-秘钥"><a href="#使用-GPG-秘钥" class="headerlink" title="使用 GPG 秘钥"></a>使用 GPG 秘钥</h2><p>在终端中使用 <code>gpg --list-secret-keys --keyid-format LONG</code> 命令查看当前秘钥的信息。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ gpg --list-secret-keys --keyid-format LONG</span><br><span class="line">/Users/hubot/.gnupg/secring.gpg</span><br><span class="line">  ------------------------------------</span><br><span class="line">sec   4096R/3AA5C34371567BD2 2016-03-10 [expires: 2017-03-10]</span><br><span class="line">uid                          Hubot </span><br><span class="line">ssb   4096R/42B317FD4BA89E7A 2016-03-10</span><br></pre></td></tr></table></figure></p><p>在这里 <code>3AA5C34371567BD2</code> 就是秘钥的 <strong>ID</strong>。</p><p>使用以下命令来获得 GPG 秘钥的公钥，注意 <code>&lt;ID&gt;</code> 需要替换为自己秘钥的 ID。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gpg --armor --<span class="built_in">export</span> &lt;ID&gt;</span><br></pre></td></tr></table></figure></p><p>复制以上公钥，去往 Github 账户设置页面即可添加 GPG 秘钥。</p><p>接着使用以下命令配置 git 以使用 GPG 秘钥。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.signingkey &lt;ID&gt;</span><br><span class="line">$ git config --global commit.gpgsign <span class="literal">true</span></span><br><span class="line">$ git config --global gpg.program gpg</span><br></pre></td></tr></table></figure></p><p>带有 GPG 验证的 commit 只是多了 <code>-S</code> 参数。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -S -m <span class="string">"your commit message"</span></span><br></pre></td></tr></table></figure></p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>在提交改动之后，可以使用以下命令来检验以下是否成功使用 GPG 秘钥来签名 commit。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --show-signature -1</span><br></pre></td></tr></table></figure></p><p>若带有下面的提示，则说明成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg: Good signature from <span class="string">"Your Name &lt;your@email.com&gt;"</span></span><br></pre></td></tr></table></figure></p><p><img src="/uploads/2019/03/屏幕快照 2019-03-16 04.30.09.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;本文最后更新于 2019年3月15日 可能会因为没有更新而失效。如已失效或需要修正，请留言！&lt;/p&gt;
          &lt;/div&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;首先要安装好 GPG 工具。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brew install gnupg gnupg2 pinentry-mac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置使用环境。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; -r ~/.bash_profile &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;export GPG_TTY=$(tty)&#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;export GPG_TTY=$(tty)&#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.profile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;pinentry-program /usr/local/bin/pinentry-mac&quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.gnupg/gpg-agent.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ killall gpg-agent&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;检查现有的-GPG-秘钥&quot;&gt;&lt;a href=&quot;#检查现有的-GPG-秘钥&quot; class=&quot;headerlink&quot; title=&quot;检查现有的 GPG 秘钥&quot;&gt;&lt;/a&gt;检查现有的 GPG 秘钥&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gpg --list-secret-keys --keyid-format LONG&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果没有返回值，则说明此电脑上没有配置 GPG 秘钥。&lt;br&gt;如果有，则可以跳过生成 GPG 秘钥的步骤。
    
    </summary>
    
      <category term="Tips" scheme="https://real-neo.me/categories/Tips/"/>
    
    
      <category term="Github" scheme="https://real-neo.me/tags/Github/"/>
    
      <category term="GPG" scheme="https://real-neo.me/tags/GPG/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 18.04 配置开机启动项</title>
    <link href="https://real-neo.me/Ubuntu-18-Startup.html"/>
    <id>https://real-neo.me/Ubuntu-18-Startup.html</id>
    <published>2019-03-14T18:47:58.000Z</published>
    <updated>2019-03-14T19:14:40.534Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <p>本文最后更新于 2019年3月14日 可能会因为没有更新而失效。如已失效或需要修正，请留言！</p>          </div><p>在 Ubuntu 16.04 版本中，配置开机启动项是一件很简单的事情，只需在 <code>/etc/rc.local</code> 中添加即可。</p><p>但在 Ubuntu 18.04 中，此方法失效。经搜索实践，总结了一下较为简单的设置开机启动项的方法。</p><p>首先运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br></pre></td></tr></table></figure></p><p>之后<strong>可能</strong>会出现以下提示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">no crontab <span class="keyword">for</span> neo - using an empty one</span><br><span class="line"></span><br><span class="line">Select an editor.  To change later, run <span class="string">'select-editor'</span>.</span><br><span class="line">  1. /bin/nano        &lt;---- easiest</span><br><span class="line">  2. /usr/bin/vim.basic</span><br><span class="line">  3. /usr/bin/vim.tiny</span><br><span class="line">  4. /bin/ed</span><br><span class="line"></span><br><span class="line">Choose 1-4 [1]:</span><br></pre></td></tr></table></figure></p><p>推荐选 1。</p><p>在末尾添加新的一行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@reboot /path/to/your/boot.sh</span><br></pre></td></tr></table></figure></p><p>之后把开机启动命令都写在 <code>/path/to/your/boot.sh</code> 这个文件里。</p><p>最后别忘了给文件加上可执行属性<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x /path/to/your/boot.sh</span><br></pre></td></tr></table></figure></p><p>此时重启即可看到效果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;本文最后更新于 2019年3月14日 可能会因为没有更新而失效。如已失效或需要修正，请留言！&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;在 Ubuntu 16.04 版本中，配置开机启动项是一件很
      
    
    </summary>
    
      <category term="Tips" scheme="https://real-neo.me/categories/Tips/"/>
    
    
      <category term="Ubuntu" scheme="https://real-neo.me/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>最强日期正则表达式</title>
    <link href="https://real-neo.me/Date-Regex.html"/>
    <id>https://real-neo.me/Date-Regex.html</id>
    <published>2019-03-13T21:24:27.000Z</published>
    <updated>2019-03-16T04:15:44.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单的日期判断（YYYY-MM-DD）"><a href="#简单的日期判断（YYYY-MM-DD）" class="headerlink" title="简单的日期判断（YYYY/MM/DD）"></a>简单的日期判断（YYYY/MM/DD）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^\d&#123;4&#125;(\-|\/|\.)\d&#123;1,2&#125;\1\d&#123;1,2&#125;$</span><br></pre></td></tr></table></figure><h2 id="演化的日期判断（YYYY-MM-DD-YY-MM-DD）"><a href="#演化的日期判断（YYYY-MM-DD-YY-MM-DD）" class="headerlink" title="演化的日期判断（YYYY/MM/DD| YY/MM/DD）"></a>演化的日期判断（YYYY/MM/DD| YY/MM/DD）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(^(\d&#123;4&#125;|\d&#123;2&#125;)(\-|\/|\.)\d&#123;1,2&#125;\3\d&#123;1,2&#125;$)|(^\d&#123;4&#125;年\d&#123;1,2&#125;月\d&#123;1,2&#125;日$)$</span><br></pre></td></tr></table></figure><h2 id="加入闰年的判断"><a href="#加入闰年的判断" class="headerlink" title="加入闰年的判断"></a>加入闰年的判断</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^((((1[6-9]|[2-9]\d)\d&#123;2&#125;)-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d&#123;2&#125;)-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d&#123;2&#125;)-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-))$</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先需要验证年份，显然，年份范围为 0001-9999，匹配 YYYY 的正则表达式为：<code>[0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3}</code><br>其中 <code>[0-9]</code> 也可以表示为 <code>\d</code>，但 <code>\d</code> 不如 <code>[0-9]</code> 直观，因此下面我将一直采用 <code>[0-9]</code></p><p>用正则表达式验证日期的难点有二：一是大小月份的天数不同，二是闰年的考虑。<br>对于第一个难点，我们首先不考虑闰年，假设 2 月份都是 28 天，这样，月份和日期可以分成三种情况：</p><ol><li>月份为 1、3、5、7、8、10、12，天数范围为 01-31，匹配 MM-DD 的正则表达式为：<code>(0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01])</code></li><li>月份为 4、6、9、11，天数范围为 01-30，匹配 MM-DD 的正则表达式为：<code>(0[469]|11)-(0[1-9]|[12][0-9]|30)</code></li><li>月份为 2，考虑平年情况，匹配 MM-DD 的正则表达式为：<code>02-(0[1-9]|[1][0-9]|2[0-8])</code></li></ol><p>根据上面的成果，我们可以得到匹配平年日期格式为 YYYY-MM-DD 的正则表达式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">([0-9]&#123;3&#125;[1-9]|[0-9]&#123;2&#125;[1-9][0-9]&#123;1&#125;|[0-9]&#123;1&#125;[1-9][0-9]&#123;2&#125;|[1-9][0-9]&#123;3&#125;)-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8])))</span><br></pre></td></tr></table></figure></p><p>接着我们来解决第二个难点：闰年的考虑。根据闰年的定义，我们可以将闰年分为两类：</p><ol><li>能被4整除但不能被100整除的年份。寻找后两位的变化规律，可以很快得到下面的正则匹配：<code>([0-9]{2})(0[48]|[2468][048]|[13579][26])</code></li><li>能被400整除的年份。能被400整除的数肯定能被100整除，因此后两位肯定是00，我们只要保证前两位能被4整除即可，相应的正则表达式为：<code>(0[48]|[2468][048]|[3579][26])00</code></li></ol><h2 id="最强验证日期的正则表达式"><a href="#最强验证日期的正则表达式" class="headerlink" title="最强验证日期的正则表达式"></a>最强验证日期的正则表达式</h2><p>这个日期正则表达式支持<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">YYYY-MM-DD </span><br><span class="line">YYYY/MM/DD </span><br><span class="line">YYYY_MM_DD </span><br><span class="line">YYYY.MM.DD</span><br></pre></td></tr></table></figure></p><p>这些形式。</p><p>完整的正则表达式如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((^((1[8-9]\d&#123;2&#125;)|([2-9]\d&#123;3&#125;))([-\/\._])(10|12|0?[13578])([-\/\._])(3[01]|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d&#123;2&#125;)|([2-9]\d&#123;3&#125;))([-\/\._])(11|0?[469])([-\/\._])(30|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d&#123;2&#125;)|([2-9]\d&#123;3&#125;))([-\/\._])(0?2)([-\/\._])(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([3579][26]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][13579][26])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][13579][26])([-\/\._])(0?2)([-\/\._])(29)$))</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简单的日期判断（YYYY-MM-DD）&quot;&gt;&lt;a href=&quot;#简单的日期判断（YYYY-MM-DD）&quot; class=&quot;headerlink&quot; title=&quot;简单的日期判断（YYYY/MM/DD）&quot;&gt;&lt;/a&gt;简单的日期判断（YYYY/MM/DD）&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;^\d&amp;#123;4&amp;#125;(\-|\/|\.)\d&amp;#123;1,2&amp;#125;\1\d&amp;#123;1,2&amp;#125;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;演化的日期判断（YYYY-MM-DD-YY-MM-DD）&quot;&gt;&lt;a href=&quot;#演化的日期判断（YYYY-MM-DD-YY-MM-DD）&quot; class=&quot;headerlink&quot; title=&quot;演化的日期判断（YYYY/MM/DD| YY/MM/DD）&quot;&gt;&lt;/a&gt;演化的日期判断（YYYY/MM/DD| YY/MM/DD）&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;^(^(\d&amp;#123;4&amp;#125;|\d&amp;#123;2&amp;#125;)(\-|\/|\.)\d&amp;#123;1,2&amp;#125;\3\d&amp;#123;1,2&amp;#125;$)|(^\d&amp;#123;4&amp;#125;年\d&amp;#123;1,2&amp;#125;月\d&amp;#123;1,2&amp;#125;日$)$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;加入闰年的判断&quot;&gt;&lt;a href=&quot;#加入闰年的判断&quot; class=&quot;headerlink&quot; title=&quot;加入闰年的判断&quot;&gt;&lt;/a&gt;加入闰年的判断&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;^((((1[6-9]|[2-9]\d)\d&amp;#123;2&amp;#125;)-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d&amp;#123;2&amp;#125;)-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d&amp;#123;2&amp;#125;)-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-))$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Tips" scheme="https://real-neo.me/categories/Tips/"/>
    
    
      <category term="正则表达式" scheme="https://real-neo.me/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>macOS 下的包管理器 Homebrew</title>
    <link href="https://real-neo.me/macOS-Package-Manager-Homebrew.html"/>
    <id>https://real-neo.me/macOS-Package-Manager-Homebrew.html</id>
    <published>2019-03-08T17:46:23.000Z</published>
    <updated>2019-03-14T17:27:10.776Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <p>本文最后更新于 2019年3月8日 可能会因为没有更新而失效。如已失效或需要修正，请留言！</p>          </div><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>之前使用 Ubuntu 和 CentOS 的时候，它们都各自拥有便捷的包管理器 <code>APT</code> 和 <code>YUM</code>，使用它们安装卸载软件，自动解决依赖问题，非常方便。最近在换用 macOS 系统之后，却没有了类似的管理器，安装软件又回到了和 Windows 一样的体验。虽说 App Store 拥有一些很优秀的软件，但是作为一个未来的码农，需要的很多软件并没有 App Store 版，如果手动下载安装，以后软件更新了还需要再下载安装一次，这些无意义的重复劳动需要解决掉。</p><p>早在换 Mac 之前就听说过了 <code>Homebrew</code> 的名字，它自己的介绍就是 <code>The missing package manager for macOS (or Linux)</code>，很厉害的一个项目，方便实用。它的野心不小，不满足于 macOS 系统，还将支持扩展到了 Linux 发行版系统上，甚至还支持在 WSL 中使用。<a id="more"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装非常简单，终端中一行命令即可完成。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="搜索软件"><a href="#搜索软件" class="headerlink" title="搜索软件"></a>搜索软件</h3><p>在 <code>Homebrew</code> 中搜索软件很很简单。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew search chrome</span><br></pre></td></tr></table></figure></p><p><img src="/uploads/2019/03/屏幕快照 2019-03-07 18.14.24.png" alt><br>如上图可以看到，我搜索 <code>Chrome</code> 的结果。搜索结果有两部分，<code>Formulae</code> 和 <code>Casks</code>，前者指命令行工具，后者指图形化程序。</p><p>如果想查询相关程序的信息，可以使用以下命令，对于 <code>Formulae</code> 程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew info chrome-cli</span><br></pre></td></tr></table></figure></p><p><img src="/uploads/2019/03/屏幕快照 2019-03-07 18.19.07.png" alt><br>对于 <code>Casks</code> 程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask info google-chrome</span><br></pre></td></tr></table></figure></p><p><img src="/uploads/2019/03/屏幕快照 2019-03-07 18.19.31.png" alt></p><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><p>在知道程序准确名称之后，可以使用以下命令安装，对于 <code>Formulae</code> 程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install chrome-cli</span><br></pre></td></tr></table></figure></p><p>对于 <code>Casks</code> 程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask install google-chrome</span><br></pre></td></tr></table></figure></p><h3 id="卸载软件"><a href="#卸载软件" class="headerlink" title="卸载软件"></a>卸载软件</h3><p>卸载软件同样很简单，对于 <code>Formulae</code> 程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew uninstall chrome-cli</span><br></pre></td></tr></table></figure></p><p>对于 <code>Casks</code> 程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask uninstall google-chrome</span><br></pre></td></tr></table></figure></p><h3 id="升级软件"><a href="#升级软件" class="headerlink" title="升级软件"></a>升级软件</h3><p>更新软件源和 <code>Homebrew</code> 本身。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew update</span><br></pre></td></tr></table></figure></p><p>列出没有更新到最新版本的 <code>Formulae</code> 程序。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew outdated</span><br></pre></td></tr></table></figure></p><p><img src="/uploads/2019/03/屏幕快照 2019-03-07 18.29.24.png" alt></p><p>更新所有 <code>Formulae</code> 程序，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew upgrade</span><br></pre></td></tr></table></figure></p><p><img src="/uploads/2019/03/屏幕快照 2019-03-07 18.33.04.png" alt><br>或者更新特定 <code>Formulae</code> 程序。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew upgrade node</span><br></pre></td></tr></table></figure></p><p>对于 <code>Casks</code> 程序来说，更新并没有如此简单，不过可以使用一个小插件来使之简化。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew tap buo/cask-upgrade</span><br></pre></td></tr></table></figure></p><p>之后，只需运行以下命令即可检查 <code>Casks</code> 程序的更新。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cu</span><br></pre></td></tr></table></figure></p><p><img src="/uploads/2019/03/屏幕快照 2019-03-07 18.36.24.png" alt></p><p>默认不会检查带有自动更新功能的程序，不过我想要的是让它检查，帮我更新，只需添加一个参数即可。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cu -a</span><br></pre></td></tr></table></figure></p><p><img src="/uploads/2019/03/屏幕快照 2019-03-07 18.38.50.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;本文最后更新于 2019年3月8日 可能会因为没有更新而失效。如已失效或需要修正，请留言！&lt;/p&gt;
          &lt;/div&gt;
&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;之前使用 Ubuntu 和 CentOS 的时候，它们都各自拥有便捷的包管理器 &lt;code&gt;APT&lt;/code&gt; 和 &lt;code&gt;YUM&lt;/code&gt;，使用它们安装卸载软件，自动解决依赖问题，非常方便。最近在换用 macOS 系统之后，却没有了类似的管理器，安装软件又回到了和 Windows 一样的体验。虽说 App Store 拥有一些很优秀的软件，但是作为一个未来的码农，需要的很多软件并没有 App Store 版，如果手动下载安装，以后软件更新了还需要再下载安装一次，这些无意义的重复劳动需要解决掉。&lt;/p&gt;
&lt;p&gt;早在换 Mac 之前就听说过了 &lt;code&gt;Homebrew&lt;/code&gt; 的名字，它自己的介绍就是 &lt;code&gt;The missing package manager for macOS (or Linux)&lt;/code&gt;，很厉害的一个项目，方便实用。它的野心不小，不满足于 macOS 系统，还将支持扩展到了 Linux 发行版系统上，甚至还支持在 WSL 中使用。
    
    </summary>
    
      <category term="Tips" scheme="https://real-neo.me/categories/Tips/"/>
    
    
      <category term="macOS" scheme="https://real-neo.me/tags/macOS/"/>
    
      <category term="Homebrew" scheme="https://real-neo.me/tags/Homebrew/"/>
    
  </entry>
  
  <entry>
    <title>macOS 下 Android 平台工具的 PATH 配置</title>
    <link href="https://real-neo.me/macOS-Android-Platform-Tools.html"/>
    <id>https://real-neo.me/macOS-Android-Platform-Tools.html</id>
    <published>2019-03-07T11:19:53.000Z</published>
    <updated>2019-03-14T17:27:05.649Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <p>本文最后更新于 2019年3月7日 可能会因为没有更新而失效。如已失效或需要修正，请留言！</p>          </div><p>在安装了 Android Studio 之后，相关的 <code>adb</code> <code>fastboot</code> 等工具应该都应经下载在电脑里了。但是 AS 并没有把相关的目录加入 PATH，导致在终端里不可以方便的直接使用，需要加上很长的一串路径才可可以。这个文章记录下解决的办法。</p><p>编辑 BASH 的配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nano ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p>在文件最后追加几行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ANDROID_HOME=<span class="variable">$HOME</span>/Library/Android/sdk</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/platform-tools"</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/tools"</span></span><br></pre></td></tr></table></figure></p><p>macOS 下的默认 <code>ANDROID_HOME</code> 位置就是如上配置，无需修改，其他系统下的路径需要根据实际情况修改。</p><p>之后再使刚改好的配置生效，或者重新打开终端。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p>配置好后的效果如下图。<br><img src="/uploads/2019/03/屏幕快照 2019-03-07 12.46.11.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;本文最后更新于 2019年3月7日 可能会因为没有更新而失效。如已失效或需要修正，请留言！&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;在安装了 Android Studio 之后，相关的 &lt;cod
      
    
    </summary>
    
      <category term="Tips" scheme="https://real-neo.me/categories/Tips/"/>
    
    
      <category term="macOS" scheme="https://real-neo.me/tags/macOS/"/>
    
      <category term="Android" scheme="https://real-neo.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>去除 Next 主题图片的灰色边框</title>
    <link href="https://real-neo.me/Remove-Next-Gray-Border.html"/>
    <id>https://real-neo.me/Remove-Next-Gray-Border.html</id>
    <published>2019-03-06T22:52:49.000Z</published>
    <updated>2019-03-16T03:55:15.179Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <p>本文最后更新于 2019年3月6日 可能会因为没有更新而失效。如已失效或需要修正，请留言！</p>          </div><p>最近发了篇文章，带了些截图，发现对于 macOS 处理过的截图，Next 主题在图片周围加一圈灰色边框并不美观。<br><img src="/uploads/2019/03/屏幕快照 2019-03-06 22.50.30.png" alt></p><p>于是便想办法去掉它。<a id="more"></a>打开浏览器检查图片样式，发现图片周围加了一圈一个像素宽度的灰色边框。<br><img src="/uploads/2019/03/屏幕快照 2019-03-06 23.03.19.png" alt></p><p>打开 Hexo 博客目录，直接搜索整个目录，果然在 <code>themes/next/source/css/_common/components/post/post-expand.styl</code> 这个文件里找到了配置。</p><p>只需将以下代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid $gray-lighter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>改为<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>即可去除边框。</p><p>去除边框之后的效果，看起来舒服多了。<br><img src="/uploads/2019/03/屏幕快照 2019-03-06 22.51.55.png" alt></p><p>最后记得一点，一定要先执行 <code>hexo clean</code> 再部署，否则样式表文件并不会更新导致修改不生效。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;本文最后更新于 2019年3月6日 可能会因为没有更新而失效。如已失效或需要修正，请留言！&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;最近发了篇文章，带了些截图，发现对于 macOS 处理过的截图，Next 主题在图片周围加一圈灰色边框并不美观。&lt;br&gt;&lt;img src=&quot;/uploads/2019/03/屏幕快照 2019-03-06 22.50.30.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;于是便想办法去掉它。
    
    </summary>
    
      <category term="Tips" scheme="https://real-neo.me/categories/Tips/"/>
    
    
      <category term="Next" scheme="https://real-neo.me/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>创建 Localhost 证书</title>
    <link href="https://real-neo.me/Create-Localhost-Certificate.html"/>
    <id>https://real-neo.me/Create-Localhost-Certificate.html</id>
    <published>2019-03-05T19:53:15.000Z</published>
    <updated>2019-03-14T17:27:46.893Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <p>本文最后更新于 2019年3月5日 可能会因为没有更新而失效。如已失效或需要修正，请留言！</p>          </div><p>有时因为开发的需求，需要为本地的网页服务器设置 https 访问。在这里记录一下在 macOS 系统下快速创建自签名证书并设置可信的方法。</p><h2 id="Xcode-Command-Line-Tools"><a href="#Xcode-Command-Line-Tools" class="headerlink" title="Xcode Command Line Tools"></a>Xcode Command Line Tools</h2><p>基本所有在 macOS 中开发的人应该都已经安装过了命令行工具，在终端中一句命令即可安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcode-select --install</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><p>在终端里运行以下命令即可在用户目录里生成证书和秘钥。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -x509 -days 3650 -out localhost.crt -keyout localhost.key \</span><br><span class="line">  -newkey rsa:2048 -nodes -sha256 \</span><br><span class="line">  -subj <span class="string">'/CN=localhost'</span> -extensions EXT -config &lt;( \</span><br><span class="line">   <span class="built_in">printf</span> <span class="string">"[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth"</span>)</span><br></pre></td></tr></table></figure></p><p>其中 <code>-days 3650</code> 参数是指定证书的有效时间为 3650 天。<br><img src="/uploads/2019/03/屏幕快照 2019-03-05 20.03.20.png" alt></p><h2 id="设置信任"><a href="#设置信任" class="headerlink" title="设置信任"></a>设置信任</h2><p>最后，需要在系统中设置信任，否则直接使用仍会提示不信任。</p><p>直接搜索打开“钥匙串访问”，“文件” - “导入项目” - 选择刚生成的 crt 文件。</p><p>双击打开刚导入的证书，设置“使用此证书时：始终信任”。<br><img src="/uploads/2019/03/屏幕快照 2019-03-05 20.17.10.png" alt></p><p>效果如下图。<br><img src="/uploads/2019/03/屏幕快照 2019-03-05 20.19.24.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;本文最后更新于 2019年3月5日 可能会因为没有更新而失效。如已失效或需要修正，请留言！&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;有时因为开发的需求，需要为本地的网页服务器设置 https 访问。在这里记录一下在 macOS 系统下快速创建自签名证书并设置可信的方法。&lt;/p&gt;
&lt;h2 id=&quot;Xcode-Command-Line-Tools&quot;&gt;&lt;a href=&quot;#Xcode-Command-Line-Tools&quot; class=&quot;headerlink&quot; title=&quot;Xcode Command Line Tools&quot;&gt;&lt;/a&gt;Xcode Command Line Tools&lt;/h2&gt;&lt;p&gt;基本所有在 macOS 中开发的人应该都已经安装过了命令行工具，在终端中一句命令即可安装。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ xcode-select --install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tips" scheme="https://real-neo.me/categories/Tips/"/>
    
    
      <category term="证书" scheme="https://real-neo.me/tags/%E8%AF%81%E4%B9%A6/"/>
    
      <category term="macOS" scheme="https://real-neo.me/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>修复 Ubuntu 下拼音输入法崩溃问题</title>
    <link href="https://real-neo.me/Fix-Ubuntu-Input-Method-Crash.html"/>
    <id>https://real-neo.me/Fix-Ubuntu-Input-Method-Crash.html</id>
    <published>2019-02-22T18:17:43.581Z</published>
    <updated>2019-03-13T21:25:57.468Z</updated>
    
    <content type="html"><![CDATA[<p>最近在使用 Ubuntu 18.04 的过程中，遇到了一个拼音输入法总是在选字的时候崩溃的问题。</p><h2 id="崩溃表现"><a href="#崩溃表现" class="headerlink" title="崩溃表现"></a>崩溃表现</h2><p><code>crashed with SIGABRT in __assert_fail_base()</code></p><p>具体表现为：在打字时，无法使用数字键选择字词，鼠标点选也无效，只能按空格打出第一个字词。当按数字键选择字词时，输入法会崩溃，并输出字母和数字，例如我想打出“谷歌”，“谷歌”在候选列表第二个位置，按下 <code>2</code>，输入法崩溃，输出 <code>guge2</code>。</p><p>我搜索了一下，并没有找到解决办法，只好退而求其次，使用 fcitx 代替了 ibus，就这么过了半个月。然而我今天再次搜索的时候竟然找到了解决办法：<span class="exturl" data-url="aHR0cHM6Ly9hc2t1YnVudHUuY29tL3F1ZXN0aW9ucy8xMDUzMTgyL3NlbGVjdGluZy1hLW51bWJlci1kb2VzLW5vdC1hbHdheXMtcmV0dXJuLWEtY2hpbmVzZS1jaGFyYWN0ZXItd2l0aC1pYnVzLXBpbnlpbg==" title="https://askubuntu.com/questions/1053182/selecting-a-number-does-not-always-return-a-chinese-character-with-ibus-pinyin">Selecting a number does not always return a Chinese character with ibus pinyin<i class="fa fa-external-link"></i></span>。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>直接删除输入法的缓存就好：<code>rm ~/.cache/ibus/libpinyin/*</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在使用 Ubuntu 18.04 的过程中，遇到了一个拼音输入法总是在选字的时候崩溃的问题。&lt;/p&gt;
&lt;h2 id=&quot;崩溃表现&quot;&gt;&lt;a href=&quot;#崩溃表现&quot; class=&quot;headerlink&quot; title=&quot;崩溃表现&quot;&gt;&lt;/a&gt;崩溃表现&lt;/h2&gt;&lt;p&gt;&lt;code&gt;
      
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://real-neo.me/tags/Ubuntu/"/>
    
      <category term="ibus" scheme="https://real-neo.me/tags/ibus/"/>
    
  </entry>
  
  <entry>
    <title>又一次更换了评论系统</title>
    <link href="https://real-neo.me/Change-Comment-System-Again.html"/>
    <id>https://real-neo.me/Change-Comment-System-Again.html</id>
    <published>2019-01-03T17:43:21.000Z</published>
    <updated>2019-02-22T18:17:43.577Z</updated>
    
    <content type="html"><![CDATA[<p>去年暑期的时候 HyperComments 开始收费，并且不给钱就不给看历史数据，一声不吭就直接进入收费模式，这也太狗了。去他妈的 HyperComments 吧，不用就不用了。于是在那个时候换了 Disqus 这个经典的评论系统。</p><p>Disqus 虽好，但国内访问不了，我那时还感叹了一下，以后评论随缘吧（说的好像能访问就有很多评论一样）。思来想去，国内用户看不到评论系统，少了点东西，那样的话看我这个网站总是怪怪的。</p><p>今天在升级 NexT 主题时，又详细看了一下配置信息，看到了 Gitment 和 Gitalk 这个玩意儿，在 GitHub 的仓库中开 Issue 为每个页面记录评论。不得不说，这个思路很清奇。本身 Hexo 博客就是托管在 GitHub 仓库中的，那么一个 Issue 就对应一个文章，这个 Issue 下面的评论就对应文章下面的评论。</p><p>现在你看到的评论框就是 Gitalk 了，比 Gitment 更新的勤快，比 Gitment 维护的人多，比 Gitment 好看，是我选择 Gitalk 的理由。</p><p>有一点不太方便的地方就是，每篇文章都需要手动初始化评论，不能自动初始化。新文章的初始化还简单些，就是访问一下页面，老文章的初始化就有些蛋疼，毕竟也有几十个呢。还好网上找到了一键脚本，得以解决这个问题。话虽是这么说，但我还是没有用一键脚本，仍是访问了每篇文章来初始化。别问为什么，就是想顺便回顾一下历史。</p><p>现在，国内用户终于可以访问我的评论系统了，不过真的会有多少人来评论吗？#捂脸</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;去年暑期的时候 HyperComments 开始收费，并且不给钱就不给看历史数据，一声不吭就直接进入收费模式，这也太狗了。去他妈的 HyperComments 吧，不用就不用了。于是在那个时候换了 Disqus 这个经典的评论系统。&lt;/p&gt;
&lt;p&gt;Disqus 虽好，但国内
      
    
    </summary>
    
      <category term="生活随笔" scheme="https://real-neo.me/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Disqus" scheme="https://real-neo.me/tags/Disqus/"/>
    
      <category term="Gitalk" scheme="https://real-neo.me/tags/Gitalk/"/>
    
  </entry>
  
  <entry>
    <title>COM6516 Assessed Lab</title>
    <link href="https://real-neo.me/COM6516-Assessed-Lab.html"/>
    <id>https://real-neo.me/COM6516-Assessed-Lab.html</id>
    <published>2018-12-10T17:14:55.000Z</published>
    <updated>2019-03-13T23:18:28.412Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <h2 id="Assessed-Lab-1"><a href="#Assessed-Lab-1" class="headerlink" title="Assessed Lab 1"></a>Assessed Lab 1</h2>          </div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 05/11/18 11:12.</span></span><br><span class="line"><span class="comment"> * Last modified 05/11/18 10:39.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sheffield.EasyReader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This class can generate a walking plan for a old person</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenerateWalkingPlan</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Program starts here.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args command line arguments.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Ask for user's name and age for creating plan</span></span><br><span class="line">EasyReader myReader = <span class="keyword">new</span> EasyReader();</span><br><span class="line"></span><br><span class="line">String name = myReader.readString(<span class="string">"What is your name? "</span>);</span><br><span class="line"><span class="keyword">int</span> age = myReader.readInt(<span class="string">"Hello "</span> + name + <span class="string">", how old are you? "</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a walk plan and print it</span></span><br><span class="line">WalkingPlan newPlan = <span class="keyword">new</span> WalkingPlan(name, age);</span><br><span class="line"></span><br><span class="line">newPlan.generate();</span><br><span class="line">newPlan.toPrint();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 05/11/18 11:10.</span></span><br><span class="line"><span class="comment"> * Last modified 05/11/18 10:45.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This is walk plan for old person</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WalkingPlan</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This plan only contains 14 days plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PLAN_DAYS = <span class="number">14</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * We define more than 1500 meters as hard day</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HARD_MODE = <span class="number">1500</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * If two hard days in a row, we need change second day as relax day</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> RELAX_MODE = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * User's name</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * User's age</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Every days plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[] plan;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The total meters of whole plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> total;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Average meters of this plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">long</span> average;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Constructor method for WalkingPlan</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name user's name</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> age  user's age</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">WalkingPlan(String name, <span class="keyword">int</span> age) &#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize these variables</span></span><br><span class="line">plan = <span class="keyword">new</span> <span class="keyword">int</span>[PLAN_DAYS];</span><br><span class="line">total = <span class="number">0</span>;</span><br><span class="line">average = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This method will generate a waling plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Random random = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; PLAN_DAYS; i++) &#123;</span><br><span class="line">plan[i] = <span class="number">10</span> * (<span class="number">10</span> + random.nextInt(<span class="number">240</span>)); <span class="comment">// Generate a int in [100, 2500)</span></span><br><span class="line"><span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (plan[i] &gt; HARD_MODE &amp;&amp; plan[i - <span class="number">1</span>] &gt; HARD_MODE)</span><br><span class="line">plan[i] = RELAX_MODE;</span><br><span class="line">&#125;</span><br><span class="line">total += plan[i];</span><br><span class="line">&#125;</span><br><span class="line">average = Math.round((<span class="keyword">double</span>) total / PLAN_DAYS);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This method will print walking plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toPrint</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println();</span><br><span class="line">System.out.println(name + <span class="string">"(age="</span> + age + <span class="string">") - this is your walking plan:"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; PLAN_DAYS; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"Day "</span> + (i + <span class="number">1</span>) + <span class="string">": walk "</span> + plan[i] + <span class="string">"m"</span>);</span><br><span class="line"><span class="keyword">if</span> (plan[i] &gt; HARD_MODE)</span><br><span class="line">System.out.println(<span class="string">" &lt;--- hard"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"Total number of meters walked = "</span> + total);</span><br><span class="line">System.out.println(<span class="string">"Average number of meters walked per day = "</span> + average);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info">            <h2 id="Assessed-Lab-2"><a href="#Assessed-Lab-2" class="headerlink" title="Assessed Lab 2"></a>Assessed Lab 2</h2>          </div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/10/18 5:17 PM.</span></span><br><span class="line"><span class="comment"> * Last modified 12/10/18 11:24 AM.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This class will show the Scorer GUI.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScorerGUI</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Program starts here.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args command line arguments</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">JFrame f = <span class="keyword">new</span> ScoringFrame();</span><br><span class="line"><span class="comment">//Set the frame visible</span></span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/10/18 5:17 PM.</span></span><br><span class="line"><span class="comment"> * Last modified 12/10/18 11:24 AM.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This class is a score record.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Scorer</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Scorer's name.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Scorer's score.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> score;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Constructor method of Scorer.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name  Scorer's name.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> score Scorer's score.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Scorer(String name, <span class="keyword">int</span> score) &#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.score = score;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Getter method of name.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Scorer's name.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Getter method of score.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Scorer's score.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> score;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/10/18 5:17 PM.</span></span><br><span class="line"><span class="comment"> * Last modified 12/10/18 11:38 AM.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This comparator will compare two scorer's score.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScoreComparator</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">Scorer</span>&gt; </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Compare to scorer's score.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> a First scorer.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> b Second scorer.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> The difference of two scorers' score.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Scorer a, Scorer b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> b.getScore() - a.getScore();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/10/18 5:17 PM.</span></span><br><span class="line"><span class="comment"> * Last modified 12/10/18 11:47 AM.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This class will create a score frame.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ScoringFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * "Enter Score" button.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> JButton enterButton;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * "Quit" button.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> JButton quitButton;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Name text field.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> JTextField nameText;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Score text field.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> JTextField scoreText;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This label show the highest score.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> JLabel highestLabel;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This set stores all scores.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> Set&lt;Scorer&gt; scorerList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Constructor method of ScoringFrame.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ScoringFrame() &#123;</span><br><span class="line"><span class="comment">//Set title</span></span><br><span class="line"><span class="keyword">super</span>(<span class="string">"Competition score GUI"</span>);</span><br><span class="line"><span class="comment">//Set window's size</span></span><br><span class="line">setSize(<span class="number">960</span>, <span class="number">270</span>);</span><br><span class="line"><span class="comment">//Set window's position in the centre of screen</span></span><br><span class="line"><span class="keyword">this</span>.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"><span class="comment">//Set this windows can only be closed by quit button</span></span><br><span class="line"><span class="keyword">this</span>.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Components of this frame</span></span><br><span class="line">JLabel nameLabel = <span class="keyword">new</span> JLabel(<span class="string">"Name: "</span>);</span><br><span class="line">nameText = <span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line">JLabel scoreLabel = <span class="keyword">new</span> JLabel(<span class="string">"Score: "</span>);</span><br><span class="line">scoreText = <span class="keyword">new</span> JTextField(<span class="number">5</span>);</span><br><span class="line">enterButton = <span class="keyword">new</span> JButton(<span class="string">"Enter Score"</span>);</span><br><span class="line">enterButton.addActionListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Top</span></span><br><span class="line">JPanel topPanel = <span class="keyword">new</span> JPanel();</span><br><span class="line">topPanel.add(nameLabel);</span><br><span class="line">topPanel.add(nameText);</span><br><span class="line">topPanel.add(scoreLabel);</span><br><span class="line">topPanel.add(scoreText);</span><br><span class="line">topPanel.add(enterButton);</span><br><span class="line"><span class="keyword">this</span>.add(topPanel, BorderLayout.NORTH);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Centre</span></span><br><span class="line">highestLabel = <span class="keyword">new</span> JLabel(<span class="string">"Top scorer is"</span>, JLabel.CENTER);</span><br><span class="line">highestLabel.setFont(<span class="keyword">new</span> Font(<span class="string">"Arial"</span>, Font.PLAIN, <span class="number">36</span>));</span><br><span class="line">highestLabel.setForeground(Color.RED);</span><br><span class="line"><span class="keyword">this</span>.add(highestLabel, BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Bottom</span></span><br><span class="line">JPanel bottomPanel = <span class="keyword">new</span> JPanel();</span><br><span class="line">quitButton = <span class="keyword">new</span> JButton(<span class="string">"Quit"</span>);</span><br><span class="line">quitButton.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">bottomPanel.add(quitButton);</span><br><span class="line"><span class="keyword">this</span>.add(bottomPanel, BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Use comparator to sort this set</span></span><br><span class="line">scorerList = <span class="keyword">new</span> TreeSet&lt;&gt;(<span class="keyword">new</span> ScoreComparator());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This method execute every time when action happens.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> e Action event.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">//If clicked "Enter Score" button</span></span><br><span class="line"><span class="keyword">if</span> (e.getSource().equals(enterButton)) &#123;</span><br><span class="line"><span class="comment">//If user did not input correct data, popup a message</span></span><br><span class="line"><span class="keyword">if</span> (nameText.getText().equals(<span class="string">""</span>) || scoreText.getText().equals(<span class="string">""</span>)) &#123;</span><br><span class="line">JLabel promptLabel = <span class="keyword">new</span> JLabel(<span class="string">"Please input correct data!"</span>, JLabel.CENTER);</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, promptLabel, <span class="string">"Oops!"</span>, JOptionPane.ERROR_MESSAGE);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">int</span> tempScore = Integer.parseInt(scoreText.getText());</span><br><span class="line"><span class="comment">//Check if user input correct number</span></span><br><span class="line"><span class="keyword">if</span> (tempScore &lt; <span class="number">0</span> || tempScore &gt;= <span class="number">100</span>)</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> NumberFormatException();</span><br><span class="line"></span><br><span class="line"><span class="comment">//No problem, create new scorer, and store it</span></span><br><span class="line">Scorer newScorer = <span class="keyword">new</span> Scorer(nameText.getText(), tempScore);</span><br><span class="line">scorerList.add(newScorer);</span><br><span class="line"></span><br><span class="line"><span class="comment">//No need to check if has next</span></span><br><span class="line">Scorer highestScorer = scorerList.iterator().next();</span><br><span class="line"><span class="comment">//Then set the text of high label</span></span><br><span class="line">highestLabel.setText(<span class="string">"Top scorer is "</span> + highestScorer.getName() + <span class="string">" with "</span> + highestScorer.getScore() + <span class="string">"points"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (NumberFormatException ex) &#123; <span class="comment">//If user did not input correct number</span></span><br><span class="line">JLabel promptLabel = <span class="keyword">new</span> JLabel(<span class="string">"Please input correct data!"</span>, JLabel.CENTER);</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, promptLabel, <span class="string">"Oops!"</span>, JOptionPane.ERROR_MESSAGE);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.getSource().equals(quitButton)) &#123; <span class="comment">//If clicked "Quit" button</span></span><br><span class="line"><span class="comment">//Print all scorer's name and score.</span></span><br><span class="line"><span class="keyword">for</span> (Scorer s : scorerList)</span><br><span class="line">System.out.println(<span class="string">"Name = "</span> + s.getName() + <span class="string">", Score = "</span> + s.getScore());</span><br><span class="line"><span class="comment">//At last, goodbye my friend!</span></span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;h2 id=&quot;Assessed-Lab-1&quot;&gt;&lt;a href=&quot;#Assessed-Lab-1&quot; class=&quot;headerlink&quot; title=&quot;Assessed Lab 1&quot;&gt;&lt;/a&gt;Assessed Lab 1&lt;/h2&gt;
          &lt;/div&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Developed by Neo on 05/11/18 11:12.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Last modified 05/11/18 10:39.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Copyright (c) 2018. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sheffield.EasyReader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * This class can generate a walking plan for a old person&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GenerateWalkingPlan&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * Program starts here.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; args command line arguments.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Ask for user&#39;s name and age for creating plan&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		EasyReader myReader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EasyReader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String name = myReader.readString(&lt;span class=&quot;string&quot;&gt;&quot;What is your name? &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age = myReader.readInt(&lt;span class=&quot;string&quot;&gt;&quot;Hello &quot;&lt;/span&gt; + name + &lt;span class=&quot;string&quot;&gt;&quot;, how old are you? &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Create a walk plan and print it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		WalkingPlan newPlan = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WalkingPlan(name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		newPlan.generate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		newPlan.toPrint();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Java" scheme="https://real-neo.me/tags/Java/"/>
    
      <category term="COM6516" scheme="https://real-neo.me/tags/COM6516/"/>
    
  </entry>
  
  <entry>
    <title>COM6506-Assignment</title>
    <link href="https://real-neo.me/COM6506-Assignment.html"/>
    <id>https://real-neo.me/COM6506-Assignment.html</id>
    <published>2018-12-04T14:09:47.000Z</published>
    <updated>2019-03-16T04:14:07.650Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dateTests;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertEquals;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MetaMorphicTestingExample</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Illustration of how one might test the Metamorphic relation MA,</span></span><br><span class="line"><span class="comment"> * given as example in the assignment (that the day of the week can</span></span><br><span class="line"><span class="comment"> * be optional.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MA</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//Imagine that the following string had been in our CatPart tests:</span></span><br><span class="line">String originalInput = <span class="string">"Tue, 3 Jun 2008 11:05:30 GMT"</span>;</span><br><span class="line"><span class="comment">//Now we compute the output from the original test case.</span></span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Now we generate a new test input to test the Metamorphic relation.</span></span><br><span class="line"><span class="comment"> * For the relation MA, we remove the 'Tue' part of the input, and make</span></span><br><span class="line"><span class="comment"> * the assumption that we should also remove the subsequent comma and space</span></span><br><span class="line"><span class="comment"> * as well to avoid a parsing error:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">String metaMorphInput = <span class="string">"3 Jun 2008 11:05:30 GMT"</span>;</span><br><span class="line">LocalDateTime metaMorphDateTime = LocalDateTime.parse(metaMorphInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Our Metamorphic relation suggests that the resulting time should remain</span></span><br><span class="line"><span class="comment"> * equal to the original time. Therefore we make this our test oracle:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metaMorphDateTime);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dateTests;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CatPart</span> </span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test0</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Mon, 6 Jan 2020 10:05:04 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Tue, 17 Apr 2018 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Wed, 22 Jul 2020 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Thu, 4 Oct 2018 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Fri, 14 Feb 2020 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 26 May 2018 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 8 Aug 2020 06:35:07 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 17 Nov 2018 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 22 Mar 2020 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test9</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 3 Jun 2018 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dateTests;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertEquals;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MA</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The year plus 1 should equals to the day plus 365 or 366(when leap year).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test0</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Mon, 6 Jan 2020 10:05:04 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Wed, 6 Jan 2021 10:05:04 GMT"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">366</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Tue, 17 Apr 2018 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Wed, 17 Apr 2019 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">365</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Wed, 22 Jul 2020 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Thu, 22 Jul 2021 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">365</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Thu, 4 Oct 2018 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Fri, 4 Oct 2019 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">365</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Fri, 14 Feb 2020 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sun, 14 Feb 2021 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">366</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 26 May 2018 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sun, 26 May 2019 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">365</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 8 Aug 2020 06:35:07 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sun, 8 Aug 2021 06:35:07 GMT"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">365</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 17 Nov 2018 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sun, 17 Nov 2019 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">365</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 22 Mar 2020 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Mon, 22 Mar 2021 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">365</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test9</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 3 Jun 2018 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Mon, 3 Jun 2019 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime.minusDays(<span class="number">365</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dateTests;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertEquals;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MB</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * When year changes, the month of year of two time should be equal.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test0</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Mon, 6 Jan 2020 10:05:04 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Mon, 6 Jan 2025 10:05:04 GMT"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Tue, 17 Apr 2018 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Mon, 17 Apr 2017 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Wed, 22 Jul 2020 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sat, 22 Jul 2028 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Thu, 4 Oct 2018 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sat, 4 Oct 2008 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Fri, 14 Feb 2020 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Tue, 14 Feb 2012 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 26 May 2018 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Tue, 26 May 2218 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 8 Aug 2020 06:35:07 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Thu, 8 Aug 2120 06:35:07 GMT"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 17 Nov 2018 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sun, 17 Nov 1996 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 22 Mar 2020 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Mon, 22 Mar 1920 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test9</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 3 Jun 2018 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sat, 3 Jun 2000 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime.getMonth(), metamorphicDateTime.getMonth());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dateTests;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertNotEquals;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MC</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The second of minute is optional.</span></span><br><span class="line"><span class="comment"> * Missing out this value should affect the time where second is not zero.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test0</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Mon, 6 Jan 2020 10:05:04 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Mon, 6 Jan 2020 10:05 GMT"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Tue, 17 Apr 2018 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Tue, 17 Apr 2018 09:06 -0100"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Wed, 22 Jul 2020 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Wed, 22 Jul 2020 08:12 -0130"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Thu, 4 Oct 2018 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Thu, 4 Oct 2018 13:16 +0230"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Fri, 14 Feb 2020 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Fri, 14 Feb 2020 14:05 +0330"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 26 May 2018 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sat, 26 May 2018 07:03 -0500"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 8 Aug 2020 06:35:07 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sat, 8 Aug 2020 06:35 GMT"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 17 Nov 2018 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sat, 17 Nov 2018 15:08 +0630"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 22 Mar 2020 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sun, 22 Mar 2020 17:09 -0700"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test9</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 3 Jun 2018 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sun, 3 Jun 2018 18:50 +0800"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertNotEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dateTests;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertEquals;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MD</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Case insensitive.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test0</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Mon, 6 Jan 2020 10:05:04 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"mon, 6 jan 2020 10:05:04 gmt"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Tue, 17 Apr 2018 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"tue, 17 apr 2018 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Wed, 22 Jul 2020 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"wed, 22 jul 2020 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Thu, 4 Oct 2018 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"thu, 4 oct 2018 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Fri, 14 Feb 2020 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"fri, 14 feb 2020 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 26 May 2018 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"sAt, 26 mAy 2018 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 8 Aug 2020 06:35:07 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"saT, 8 auG 2020 06:35:07 gmT"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 17 Nov 2018 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"SAT, 17 NOV 2018 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 22 Mar 2020 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"SUn, 22 MAr 2020 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test9</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 3 Jun 2018 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"SuN, 3 JuN 2018 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dateTests;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertEquals;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ME</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The month of year can be number or words.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test0</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Mon, 6 Jan 2020 0010:05:04 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Mon, 6 1 2020 0010:05:04 GMT"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Tue, 17 Apr 2018 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Tue, 17 4 2018 09:06:07 -0100"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Wed, 22 Jul 2020 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Wed, 22 7 2020 08:12:33 -0130"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Thu, 4 Oct 2018 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Thu, 4 10 2018 13:16:21 +0230"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Fri, 14 Feb 2020 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekdays</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Fri, 14 2 2020 14:05:30 +0330"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 26 May 2018 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sat, 26 5 2018 07:03:40 -0500"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 8 Aug 2020 06:35:07 GMT"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 3</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: am, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: GMT</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sat, 8 8 2020 06:35:07 GMT"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sat, 17 Nov 2018 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: middle third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 4</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is not a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sat, 17 11 2018 15:08:02 +0630"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 22 Mar 2020 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: last third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 1</span></span><br><span class="line"><span class="comment"> * year: leap year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, odd</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * second-of-minute: &lt;10, odd</span></span><br><span class="line"><span class="comment"> * offset ID: -, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sun, 22 3 2020 17:09:03 -0700"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test9</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String originalInput = <span class="string">"Sun, 3 Jun 2018 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * day-of-week: weekends</span></span><br><span class="line"><span class="comment"> * day-of-month: first third of month</span></span><br><span class="line"><span class="comment"> * month-of-year: quarter 2</span></span><br><span class="line"><span class="comment"> * year: common year</span></span><br><span class="line"><span class="comment"> * hour-of-day: pm, even</span></span><br><span class="line"><span class="comment"> * minute-of-hour: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * second-of-minute: &gt;=10, even</span></span><br><span class="line"><span class="comment"> * offset ID: +, is a multiple of an hour</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String metamorphicInput = <span class="string">"Sun, 3 6 2018 18:50:20 +0800"</span>;</span><br><span class="line">LocalDateTime metamorphicDateTime = LocalDateTime.parse(metamorphicInput, DateTimeFormatter.RFC_1123_DATE_TIME);</span><br><span class="line"></span><br><span class="line">assertEquals(originalDateTime, metamorphicDateTime);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; dateTests;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.jupiter.api.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.time.LocalDateTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.time.format.DateTimeFormatter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.junit.jupiter.api.Assertions.assertEquals;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MetaMorphicTestingExample&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * Illustration of how one might test the Metamorphic relation MA,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * given as example in the assignment (that the day of the week can&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * be optional.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MA&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//Imagine that the following string had been in our CatPart tests:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String originalInput = &lt;span class=&quot;string&quot;&gt;&quot;Tue, 3 Jun 2008 11:05:30 GMT&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//Now we compute the output from the original test case.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		LocalDateTime originalDateTime = LocalDateTime.parse(originalInput, DateTimeFormatter.RFC_1123_DATE_TIME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/*Now we generate a new test input to test the Metamorphic relation.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;		 * For the relation MA, we remove the &#39;Tue&#39; part of the input, and make&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;		 * the assumption that we should also remove the subsequent comma and space&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;		 * as well to avoid a parsing error:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;		 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String metaMorphInput = &lt;span class=&quot;string&quot;&gt;&quot;3 Jun 2008 11:05:30 GMT&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		LocalDateTime metaMorphDateTime = LocalDateTime.parse(metaMorphInput, DateTimeFormatter.RFC_1123_DATE_TIME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/*Our Metamorphic relation suggests that the resulting time should remain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;		 * equal to the original time. Therefore we make this our test oracle:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;		 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assertEquals(originalDateTime, metaMorphDateTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Java" scheme="https://real-neo.me/tags/Java/"/>
    
      <category term="COM6506" scheme="https://real-neo.me/tags/COM6506/"/>
    
  </entry>
  
  <entry>
    <title>COM6516 Week11</title>
    <link href="https://real-neo.me/COM6516-Week11.html"/>
    <id>https://real-neo.me/COM6516-Week11.html</id>
    <published>2018-12-03T17:25:31.000Z</published>
    <updated>2019-03-13T23:19:46.694Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/8/18 7:39 PM.</span></span><br><span class="line"><span class="comment"> * Last modified 11/24/17 2:18 PM.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JCalculator.java</span></span><br><span class="line"><span class="comment"> * Class to produce a simple calculator in a window</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JCalculator</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">JCalculator</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(<span class="string">"JCalculator"</span>);</span><br><span class="line">Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();</span><br><span class="line">setSize(<span class="number">300</span>, <span class="number">400</span>);</span><br><span class="line">setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">Container contentPane = <span class="keyword">this</span>.getContentPane();</span><br><span class="line"></span><br><span class="line">JTextArea display = <span class="keyword">new</span> JTextArea(<span class="number">1</span>, <span class="number">20</span>);</span><br><span class="line">display.setEditable(<span class="keyword">false</span>);</span><br><span class="line">display.setFont(<span class="keyword">new</span> Font(<span class="string">"Courier"</span>, Font.BOLD, <span class="number">40</span>));</span><br><span class="line">display.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">300</span>, <span class="number">100</span>));</span><br><span class="line">contentPane.add(display, BorderLayout.NORTH);</span><br><span class="line"></span><br><span class="line">CalculatorButtons buttons = <span class="keyword">new</span> CalculatorButtons(display);</span><br><span class="line">contentPane.add(buttons, BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">JFrame frm = <span class="keyword">new</span> JCalculator();</span><br><span class="line">frm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">frm.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/8/18 7:48 PM.</span></span><br><span class="line"><span class="comment"> * Last modified 11/24/17 2:18 PM.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * CalculatorButtons.java</span></span><br><span class="line"><span class="comment"> * COM6516</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CalculatorButtons</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] buttonLabels = &#123;<span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>, <span class="string">"+"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"-"</span>,</span><br><span class="line"><span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"*"</span>, <span class="string">"0"</span>, <span class="string">"="</span>, <span class="string">"+/-"</span>, <span class="string">"/"</span>&#125;;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] opButtonLabels = &#123;<span class="string">"+"</span>, <span class="string">"-"</span>, <span class="string">"*"</span>, <span class="string">"="</span>, <span class="string">"+/-"</span>, <span class="string">"/"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String displayedValue = <span class="string">"0"</span>;</span><br><span class="line"><span class="keyword">private</span> String operand1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">enum</span> OP &#123;PLUS, MINUS, MULT, DIV&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> OP operation = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">CalculatorButtons(JTextArea display) &#123;</span><br><span class="line">setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>, <span class="number">4</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// create buttons using factory method</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">makeButton(<span class="keyword">this</span>, buttonLabels[i], display);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// factory method for making buttons</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">makeButton</span><span class="params">(JPanel panel, String name, JTextArea display)</span> </span>&#123;</span><br><span class="line">JButton button = <span class="keyword">new</span> JButton(name);</span><br><span class="line">panel.add(button);</span><br><span class="line"><span class="comment">// ADD CODE HERE TO CREATE NEW BUTTON ACTION, AND LINK BUTTON TO DISPLAY</span></span><br><span class="line">button.addActionListener(<span class="keyword">new</span> ButtonAction(name, display));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ButtonAction</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String theLabel;</span><br><span class="line"><span class="keyword">private</span> JTextArea theDisplay;</span><br><span class="line"></span><br><span class="line">ButtonAction(String name, JTextArea display) &#123;</span><br><span class="line">theLabel = name;</span><br><span class="line">theDisplay = display;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Arrays.asList(opButtonLabels).contains(theLabel)) &#123; <span class="comment">//If pressed + - * / = +/-</span></span><br><span class="line"><span class="keyword">if</span> (theLabel.equals(<span class="string">"="</span>)) &#123; <span class="comment">//=</span></span><br><span class="line"><span class="keyword">if</span> (operation == <span class="keyword">null</span>) &#123; <span class="comment">//No second value</span></span><br><span class="line"><span class="comment">//No need to update display</span></span><br><span class="line">System.out.println(<span class="string">"No-op "</span> + displayedValue);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">//Calculate</span></span><br><span class="line"><span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> (operation) &#123;</span><br><span class="line"><span class="keyword">case</span> PLUS:</span><br><span class="line">result = Math.addExact(Integer.parseInt(operand1), Integer.parseInt(displayedValue));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> MINUS:</span><br><span class="line">result = Math.subtractExact(Integer.parseInt(operand1), Integer.parseInt(displayedValue));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> MULT:</span><br><span class="line">result = Math.multiplyExact(Integer.parseInt(operand1), Integer.parseInt(displayedValue));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DIV:</span><br><span class="line"><span class="comment">//No need to check result if overflow</span></span><br><span class="line">result = Integer.parseInt(operand1) / Integer.parseInt(displayedValue);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"Operands are "</span> + operand1 + <span class="string">" and "</span> + displayedValue);</span><br><span class="line">System.out.println(<span class="string">"Result = "</span> + result);</span><br><span class="line">displayedValue = Integer.toString(result);</span><br><span class="line">theDisplay.setText(displayedValue);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ArithmeticException e) &#123;</span><br><span class="line">displayedValue = <span class="string">"0"</span>;</span><br><span class="line">theDisplay.setText(e.getMessage());</span><br><span class="line">&#125;</span><br><span class="line">operation = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (theLabel.equals(<span class="string">"+/-"</span>)) &#123; <span class="comment">//+/-</span></span><br><span class="line"><span class="keyword">int</span> temp = Integer.parseInt(displayedValue) * -<span class="number">1</span>;</span><br><span class="line">displayedValue = Integer.toString(temp);</span><br><span class="line">theDisplay.setText(displayedValue);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">//+-*/</span></span><br><span class="line"><span class="keyword">if</span> (operation == <span class="keyword">null</span>) &#123; <span class="comment">//Continue only null operation</span></span><br><span class="line"><span class="keyword">switch</span> (theLabel) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">operation = OP.PLUS;</span><br><span class="line">theDisplay.setText(<span class="string">"+"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">operation = OP.MINUS;</span><br><span class="line">theDisplay.setText(<span class="string">"-"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">operation = OP.MULT;</span><br><span class="line">theDisplay.setText(<span class="string">"*"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"/"</span>:</span><br><span class="line">operation = OP.DIV;</span><br><span class="line">theDisplay.setText(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">operand1 = displayedValue;</span><br><span class="line">displayedValue = <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">//If pressed number</span></span><br><span class="line"><span class="keyword">if</span> (displayedValue.equals(<span class="string">"0"</span>))</span><br><span class="line">displayedValue = theLabel;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (displayedValue.length() &lt; <span class="number">8</span>) <span class="comment">//Cannot larger than 10M to prevent overflow</span></span><br><span class="line">displayedValue += theLabel;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">theDisplay.setText(displayedValue);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/8/18 7:48 PM.</span></span><br><span class="line"><span class="comment"> * Last modified 11/24/17 2:18 PM.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * CalculatorButtons.java</span></span><br><span class="line"><span class="comment"> * COM6516</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CalculatorButtons</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] buttonLabels = &#123;<span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>, <span class="string">"+"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"-"</span>,</span><br><span class="line"><span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"*"</span>, <span class="string">"0"</span>, <span class="string">"="</span>, <span class="string">"."</span>, <span class="string">"/"</span>&#125;;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] opButtonLabels = &#123;<span class="string">"+"</span>, <span class="string">"-"</span>, <span class="string">"*"</span>, <span class="string">"="</span>, <span class="string">"/"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String displayedValue = <span class="string">"0"</span>;</span><br><span class="line"><span class="keyword">private</span> String operand1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">enum</span> OP &#123;PLUS, MINUS, MULT, DIV&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> OP operation = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> dotPressed = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">CalculatorButtons(JTextArea display) &#123;</span><br><span class="line">setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>, <span class="number">4</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// create buttons using factory method</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">makeButton(<span class="keyword">this</span>, buttonLabels[i], display);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// factory method for making buttons</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">makeButton</span><span class="params">(JPanel panel, String name, JTextArea display)</span> </span>&#123;</span><br><span class="line">JButton button = <span class="keyword">new</span> JButton(name);</span><br><span class="line">panel.add(button);</span><br><span class="line"><span class="comment">// ADD CODE HERE TO CREATE NEW BUTTON ACTION, AND LINK BUTTON TO DISPLAY</span></span><br><span class="line">button.addActionListener(<span class="keyword">new</span> ButtonAction(name, display));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ButtonAction</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String theLabel;</span><br><span class="line"><span class="keyword">private</span> JTextArea theDisplay;</span><br><span class="line"></span><br><span class="line">ButtonAction(String name, JTextArea display) &#123;</span><br><span class="line">theLabel = name;</span><br><span class="line">theDisplay = display;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Arrays.asList(opButtonLabels).contains(theLabel)) &#123; <span class="comment">//If pressed + - * / =</span></span><br><span class="line"><span class="keyword">if</span> (theLabel.equals(<span class="string">"="</span>)) &#123; <span class="comment">//=</span></span><br><span class="line"><span class="keyword">if</span> (operation == <span class="keyword">null</span>) &#123; <span class="comment">//No second value</span></span><br><span class="line"><span class="comment">//No need to update display</span></span><br><span class="line">System.out.println(<span class="string">"No-op "</span> + displayedValue);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">//Calculate</span></span><br><span class="line"><span class="keyword">float</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> (operation) &#123;</span><br><span class="line"><span class="keyword">case</span> PLUS:</span><br><span class="line">result = Float.parseFloat(operand1) + Float.parseFloat(displayedValue);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> MINUS:</span><br><span class="line">result = Float.parseFloat(operand1) - Float.parseFloat(displayedValue);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> MULT:</span><br><span class="line">result = Float.parseFloat(operand1) * Float.parseFloat(displayedValue);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DIV:</span><br><span class="line">result = Float.parseFloat(operand1) / Float.parseFloat(displayedValue);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"Operands are "</span> + operand1 + <span class="string">" and "</span> + displayedValue);</span><br><span class="line">System.out.println(<span class="string">"Result = "</span> + result);</span><br><span class="line">displayedValue = Float.toString(result);</span><br><span class="line">theDisplay.setText(displayedValue);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ArithmeticException e) &#123;</span><br><span class="line">displayedValue = <span class="string">"0"</span>;</span><br><span class="line">theDisplay.setText(e.getMessage());</span><br><span class="line">&#125;</span><br><span class="line">dotPressed = <span class="keyword">true</span>; <span class="comment">//Because result must be float and have a "."</span></span><br><span class="line">operation = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">//+-*/</span></span><br><span class="line"><span class="keyword">if</span> (operation == <span class="keyword">null</span>) &#123; <span class="comment">//Continue only null operation</span></span><br><span class="line"><span class="keyword">switch</span> (theLabel) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">operation = OP.PLUS;</span><br><span class="line">theDisplay.setText(<span class="string">"+"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">operation = OP.MINUS;</span><br><span class="line">theDisplay.setText(<span class="string">"-"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">operation = OP.MULT;</span><br><span class="line">theDisplay.setText(<span class="string">"*"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"/"</span>:</span><br><span class="line">operation = OP.DIV;</span><br><span class="line">theDisplay.setText(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">dotPressed = <span class="keyword">false</span>;</span><br><span class="line">operand1 = displayedValue;</span><br><span class="line">displayedValue = <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">//If pressed number or "."</span></span><br><span class="line"><span class="keyword">if</span> (displayedValue.length() &lt; <span class="number">8</span>) &#123; <span class="comment">//Prevent overflow</span></span><br><span class="line"><span class="keyword">if</span> (theLabel.equals(<span class="string">"."</span>)) &#123; <span class="comment">//Press "."</span></span><br><span class="line"><span class="keyword">if</span> (!dotPressed) &#123;</span><br><span class="line">displayedValue += theLabel;</span><br><span class="line">&#125;</span><br><span class="line">dotPressed = <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">//Press number</span></span><br><span class="line"><span class="keyword">if</span> (displayedValue.equals(<span class="string">"0"</span>))</span><br><span class="line">displayedValue = theLabel;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">displayedValue += theLabel;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">theDisplay.setText(displayedValue);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Developed by Neo on 12/8/18 7:39 PM.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Last modified 11/24/17 2:18 PM.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Copyright (c) 2018. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * JCalculator.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Class to produce a simple calculator in a window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.swing.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.awt.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JCalculator&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JFrame&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JCalculator&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;JCalculator&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setSize(&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setLocationRelativeTo(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Container contentPane = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.getContentPane();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JTextArea display = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JTextArea(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		display.setEditable(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		display.setFont(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Font(&lt;span class=&quot;string&quot;&gt;&quot;Courier&quot;&lt;/span&gt;, Font.BOLD, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		display.setPreferredSize(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Dimension(&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		contentPane.add(display, BorderLayout.NORTH);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CalculatorButtons buttons = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CalculatorButtons(display);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		contentPane.add(buttons, BorderLayout.CENTER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JFrame frm = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JCalculator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		frm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		frm.setVisible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Java" scheme="https://real-neo.me/tags/Java/"/>
    
      <category term="COM6516" scheme="https://real-neo.me/tags/COM6516/"/>
    
  </entry>
  
  <entry>
    <title>COM6516 Week10</title>
    <link href="https://real-neo.me/COM6516-Week10.html"/>
    <id>https://real-neo.me/COM6516-Week10.html</id>
    <published>2018-11-26T23:33:52.000Z</published>
    <updated>2019-03-13T23:20:52.685Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> MyPanel drawingPanel;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">MyFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> width = (<span class="keyword">int</span>) (Toolkit.getDefaultToolkit().getScreenSize().getWidth() / <span class="number">2.0</span>);</span><br><span class="line"><span class="keyword">int</span> height = (<span class="keyword">int</span>) (width / <span class="number">16.0</span> * <span class="number">9.0</span>);</span><br><span class="line">setSize(width, height);</span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//For better looks.</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">UIManager.setLookAndFeel(<span class="string">"com.sun.java.swing.plaf.windows.WindowsLookAndFeel"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">drawingPanel = <span class="keyword">new</span> MyPanel();</span><br><span class="line">drawingPanel.setPolygon(<span class="number">5</span>);</span><br><span class="line">Container contentPane = <span class="keyword">this</span>.getContentPane();</span><br><span class="line">contentPane.add(drawingPanel, BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">JPanel columnOfButtons = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">8</span>, <span class="number">1</span>));</span><br><span class="line">ButtonGroup buttonGroup = <span class="keyword">new</span> ButtonGroup();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">makeRadioButton(columnOfButtons, String.valueOf(i), buttonGroup, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">JButton exit = <span class="keyword">new</span> JButton(<span class="string">"Exit"</span>);</span><br><span class="line">exit.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">columnOfButtons.add(exit);</span><br><span class="line"></span><br><span class="line">contentPane.add(columnOfButtons, BorderLayout.EAST);</span><br><span class="line"></span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">javax.swing.SwingUtilities.invokeLater(MyFrame::<span class="keyword">new</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">makeRadioButton</span><span class="params">(JPanel p, String name, ButtonGroup group, ActionListener target)</span> </span>&#123;</span><br><span class="line">JRadioButton b = <span class="keyword">new</span> JRadioButton(name);</span><br><span class="line">group.add(b);</span><br><span class="line"><span class="comment">// add it to the specified JPanel and make the JPanel listen</span></span><br><span class="line">p.add(b);</span><br><span class="line">b.addActionListener(target);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Do the appropriate thing depending on which button is pressed.</span></span><br><span class="line"><span class="comment">// Use the getActionCommand() method to identify the button.</span></span><br><span class="line"><span class="keyword">switch</span> (e.getActionCommand()) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"Exit"</span>:</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="string">"3"</span>:</span><br><span class="line">drawingPanel.setPolygon(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"4"</span>:</span><br><span class="line">drawingPanel.setPolygon(<span class="number">4</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"5"</span>:</span><br><span class="line">drawingPanel.setPolygon(<span class="number">5</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"6"</span>:</span><br><span class="line">drawingPanel.setPolygon(<span class="number">6</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"7"</span>:</span><br><span class="line">drawingPanel.setPolygon(<span class="number">7</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"8"</span>:</span><br><span class="line">drawingPanel.setPolygon(<span class="number">8</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"9"</span>:</span><br><span class="line">drawingPanel.setPolygon(<span class="number">9</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 26/11/18 15:37.</span></span><br><span class="line"><span class="comment"> * Last modified 17/11/17 14:21.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyPanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> sides = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setPolygon</span><span class="params">(<span class="keyword">int</span> sides)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sides = sides;</span><br><span class="line"><span class="keyword">this</span>.repaint();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paintComponent</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.paintComponent(g);</span><br><span class="line"></span><br><span class="line">Graphics2D g2 = (Graphics2D) g;</span><br><span class="line"></span><br><span class="line">g2.setColor(Color.RED);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Make text and shapes appear smoother</span></span><br><span class="line">g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (sides == <span class="number">0</span>) sides = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span>[] x = <span class="keyword">new</span> <span class="keyword">int</span>[sides];</span><br><span class="line"><span class="keyword">int</span>[] y = <span class="keyword">new</span> <span class="keyword">int</span>[sides];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> width = getWidth();</span><br><span class="line"><span class="keyword">int</span> height = getHeight();</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> r = (width &gt; height ? height : width) / <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sides; i++) &#123;</span><br><span class="line">x[i] = (<span class="keyword">int</span>) (width / <span class="number">2</span> + r * Math.cos(<span class="number">2</span> * Math.PI / sides * i));</span><br><span class="line">y[i] = (<span class="keyword">int</span>) (height / <span class="number">2</span> + r * Math.sin(<span class="number">2</span> * Math.PI / sides * i));</span><br><span class="line">&#125;</span><br><span class="line">Shape shape = <span class="keyword">new</span> Polygon(x, y, sides);</span><br><span class="line"></span><br><span class="line">g2.draw(shape);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.swing.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.awt.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.awt.event.ActionEvent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.awt.event.ActionListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFrame&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JFrame&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ActionListener&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; MyPanel drawingPanel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFrame&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; width = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) (Toolkit.getDefaultToolkit().getScreenSize().getWidth() / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; height = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) (width / &lt;span class=&quot;number&quot;&gt;16.0&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setSize(width, height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setLocationRelativeTo(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//For better looks.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			UIManager.setLookAndFeel(&lt;span class=&quot;string&quot;&gt;&quot;com.sun.java.swing.plaf.windows.WindowsLookAndFeel&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		drawingPanel = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyPanel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		drawingPanel.setPolygon(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Container contentPane = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.getContentPane();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		contentPane.add(drawingPanel, BorderLayout.CENTER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JPanel columnOfButtons = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JPanel(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GridLayout(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ButtonGroup buttonGroup = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ButtonGroup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			makeRadioButton(columnOfButtons, String.valueOf(i), buttonGroup, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JButton exit = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JButton(&lt;span class=&quot;string&quot;&gt;&quot;Exit&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		exit.addActionListener(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		columnOfButtons.add(exit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		contentPane.add(columnOfButtons, BorderLayout.EAST);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setVisible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		javax.swing.SwingUtilities.invokeLater(MyFrame::&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeRadioButton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JPanel p, String name, ButtonGroup group, ActionListener target)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JRadioButton b = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JRadioButton(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		group.add(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// add it to the specified JPanel and make the JPanel listen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		p.add(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		b.addActionListener(target);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;actionPerformed&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ActionEvent e)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Do the appropriate thing depending on which button is pressed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Use the getActionCommand() method to identify the button.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (e.getActionCommand()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Exit&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				System.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				drawingPanel.setPolygon(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;4&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				drawingPanel.setPolygon(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;5&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				drawingPanel.setPolygon(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;6&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				drawingPanel.setPolygon(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;7&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				drawingPanel.setPolygon(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;8&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				drawingPanel.setPolygon(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;9&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				drawingPanel.setPolygon(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Java" scheme="https://real-neo.me/tags/Java/"/>
    
      <category term="COM6516" scheme="https://real-neo.me/tags/COM6516/"/>
    
  </entry>
  
  <entry>
    <title>COM6516 Week09</title>
    <link href="https://real-neo.me/COM6516-Week09.html"/>
    <id>https://real-neo.me/COM6516-Week09.html</id>
    <published>2018-11-19T16:57:25.000Z</published>
    <updated>2019-03-13T23:21:09.052Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 19/11/18 11:54.</span></span><br><span class="line"><span class="comment"> * Last modified 19/11/18 11:54.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CornerString</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CornerString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(<span class="string">"Corner String"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//For better looks.</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">UIManager.setLookAndFeel(<span class="string">"com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"><span class="keyword">this</span>.setSize(<span class="number">960</span>, <span class="number">480</span>);</span><br><span class="line"><span class="keyword">this</span>.setResizable(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">this</span>.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.setContentPane(<span class="keyword">new</span> StringPanel());</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> CornerString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringPanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringPanel</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(<span class="keyword">new</span> BorderLayout());</span><br><span class="line"></span><br><span class="line">JLabel label1 = <span class="keyword">new</span> JLabel(<span class="string">"To be or not to be"</span>);</span><br><span class="line">JLabel label2 = <span class="keyword">new</span> JLabel(<span class="string">"To be or not to be"</span>);</span><br><span class="line">JLabel label3 = <span class="keyword">new</span> JLabel(<span class="string">"To be or not to be"</span>);</span><br><span class="line">JLabel label4 = <span class="keyword">new</span> JLabel(<span class="string">"To be or not to be"</span>);</span><br><span class="line"></span><br><span class="line">label1.setFont(<span class="keyword">new</span> Font(<span class="string">"Consolas"</span>, Font.PLAIN, <span class="number">32</span>));</span><br><span class="line">label1.setForeground(Color.BLUE);</span><br><span class="line">label2.setFont(<span class="keyword">new</span> Font(<span class="string">"Comic Sans MS"</span>, Font.PLAIN, <span class="number">32</span>));</span><br><span class="line">label2.setForeground(Color.GREEN);</span><br><span class="line">label3.setFont(<span class="keyword">new</span> Font(<span class="string">"Monospaced"</span>, Font.PLAIN, <span class="number">32</span>));</span><br><span class="line">label3.setForeground(Color.RED);</span><br><span class="line">label4.setFont(<span class="keyword">new</span> Font(<span class="string">"Courier"</span>, Font.PLAIN, <span class="number">32</span>));</span><br><span class="line">label4.setForeground(Color.YELLOW);</span><br><span class="line"></span><br><span class="line">JPanel northPanel = <span class="keyword">new</span> JPanel();</span><br><span class="line">northPanel.setLayout(<span class="keyword">new</span> BoxLayout(northPanel, BoxLayout.X_AXIS));</span><br><span class="line"></span><br><span class="line">northPanel.add(label1);</span><br><span class="line">northPanel.add(Box.createHorizontalGlue());</span><br><span class="line">northPanel.add(label2);</span><br><span class="line"></span><br><span class="line">JPanel southPanel = <span class="keyword">new</span> JPanel();</span><br><span class="line">southPanel.setLayout(<span class="keyword">new</span> BoxLayout(southPanel, BoxLayout.X_AXIS));</span><br><span class="line"></span><br><span class="line">southPanel.add(label3);</span><br><span class="line">southPanel.add(Box.createHorizontalGlue());</span><br><span class="line">southPanel.add(label4);</span><br><span class="line"></span><br><span class="line">add(northPanel, BorderLayout.NORTH);</span><br><span class="line">add(southPanel, BorderLayout.SOUTH);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 19/11/18 15:44.</span></span><br><span class="line"><span class="comment"> * Last modified 19/11/18 15:44.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GIFFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">GIFFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(<span class="string">"GIF Frame"</span>);</span><br><span class="line"></span><br><span class="line">setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">ImageIcon imageIcon = <span class="keyword">new</span> ImageIcon(<span class="string">"globe.gif"</span>, <span class="string">"globe"</span>);</span><br><span class="line"></span><br><span class="line">setSize(imageIcon.getIconWidth(), imageIcon.getIconHeight());</span><br><span class="line"></span><br><span class="line">JLabel imageLabel = <span class="keyword">new</span> JLabel(imageIcon);</span><br><span class="line"></span><br><span class="line">add(imageLabel);</span><br><span class="line"></span><br><span class="line">setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> GIFFrame();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Developed by Neo on 19/11/18 11:54.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Last modified 19/11/18 11:54.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Copyright (c) 2018. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.swing.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.awt.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CornerString&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JFrame&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CornerString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Corner String&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//For better looks.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			UIManager.setLookAndFeel(&lt;span class=&quot;string&quot;&gt;&quot;com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setSize(&lt;span class=&quot;number&quot;&gt;960&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;480&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setResizable(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setLocationRelativeTo(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setContentPane(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringPanel());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setVisible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CornerString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringPanel&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JPanel&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringPanel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BorderLayout());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			JLabel label1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JLabel(&lt;span class=&quot;string&quot;&gt;&quot;To be or not to be&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			JLabel label2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JLabel(&lt;span class=&quot;string&quot;&gt;&quot;To be or not to be&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			JLabel label3 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JLabel(&lt;span class=&quot;string&quot;&gt;&quot;To be or not to be&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			JLabel label4 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JLabel(&lt;span class=&quot;string&quot;&gt;&quot;To be or not to be&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			label1.setFont(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Font(&lt;span class=&quot;string&quot;&gt;&quot;Consolas&quot;&lt;/span&gt;, Font.PLAIN, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			label1.setForeground(Color.BLUE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			label2.setFont(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Font(&lt;span class=&quot;string&quot;&gt;&quot;Comic Sans MS&quot;&lt;/span&gt;, Font.PLAIN, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			label2.setForeground(Color.GREEN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			label3.setFont(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Font(&lt;span class=&quot;string&quot;&gt;&quot;Monospaced&quot;&lt;/span&gt;, Font.PLAIN, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			label3.setForeground(Color.RED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			label4.setFont(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Font(&lt;span class=&quot;string&quot;&gt;&quot;Courier&quot;&lt;/span&gt;, Font.PLAIN, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			label4.setForeground(Color.YELLOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			JPanel northPanel = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JPanel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			northPanel.setLayout(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BoxLayout(northPanel, BoxLayout.X_AXIS));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			northPanel.add(label1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			northPanel.add(Box.createHorizontalGlue());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			northPanel.add(label2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			JPanel southPanel = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JPanel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			southPanel.setLayout(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BoxLayout(southPanel, BoxLayout.X_AXIS));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			southPanel.add(label3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			southPanel.add(Box.createHorizontalGlue());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			southPanel.add(label4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			add(northPanel, BorderLayout.NORTH);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			add(southPanel, BorderLayout.SOUTH);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Java" scheme="https://real-neo.me/tags/Java/"/>
    
      <category term="COM6516" scheme="https://real-neo.me/tags/COM6516/"/>
    
  </entry>
  
  <entry>
    <title>COM6516 Week08</title>
    <link href="https://real-neo.me/COM6516-Week08.html"/>
    <id>https://real-neo.me/COM6516-Week08.html</id>
    <published>2018-11-12T10:46:46.000Z</published>
    <updated>2019-03-13T23:21:53.490Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/11/18 10:21.</span></span><br><span class="line"><span class="comment"> * Last modified 12/11/18 10:21.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListStringConvert</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">List&lt;String&gt; fixedList = Arrays.asList(<span class="string">"elephant"</span>,<span class="string">"lion"</span>,<span class="string">"leopard"</span>, <span class="string">"tiger"</span>);</span><br><span class="line">System.out.println(fixedList);</span><br><span class="line">List&lt;String&gt; myList = <span class="keyword">new</span> LinkedList&lt;String&gt;(fixedList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Iterator&lt;String&gt; iter = myList.iterator();</span></span><br><span class="line">ListIterator&lt;String&gt; iter = myList.listIterator();</span><br><span class="line"></span><br><span class="line">ArrayList&lt;String&gt; newList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">newList.add(iter.next().toUpperCase());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(newList);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">HashSetTest.java</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Example class that demonstrates used of HashSet Collection.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashSetTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">Set&lt;Person&gt; people = <span class="keyword">new</span> TreeSet&lt;Person&gt;(<span class="keyword">new</span> AgeComparator());<span class="comment">// here we declare people to be the most general type, which makes it possible to swap HashSet for TreeSet.</span></span><br><span class="line">StringTokenizer st;</span><br><span class="line">String firstName, surname, line;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">// read data from file</span></span><br><span class="line"><span class="comment">// (The try/catch construction catches an exception, ie. error,               </span></span><br><span class="line"><span class="comment">// if the file is not found) </span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Scanner file = <span class="keyword">new</span> Scanner(<span class="keyword">new</span> File(<span class="string">"Person.txt"</span>));</span><br><span class="line"><span class="comment">// assume file has at least one line</span></span><br><span class="line"><span class="comment">// that specifies the number of records</span></span><br><span class="line"><span class="keyword">int</span> numData = file.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">// read in each line, and split into tokens</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numData; i++) &#123;</span><br><span class="line">line = file.next();</span><br><span class="line">st = <span class="keyword">new</span> StringTokenizer(line, <span class="string">"|"</span>);</span><br><span class="line">firstName = st.nextToken();</span><br><span class="line">surname = st.nextToken();</span><br><span class="line">age = Integer.parseInt(st.nextToken());</span><br><span class="line">people.add(<span class="keyword">new</span> Person(firstName, surname, age));</span><br><span class="line">&#125;</span><br><span class="line">file.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iterate through hash set</span></span><br><span class="line">Iterator&lt;Person&gt; iter = people.iterator();</span><br><span class="line"><span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">Person p = iter.next();</span><br><span class="line"><span class="keyword">if</span> (!p.getSurname().equals(<span class="string">"James"</span>) &amp;&amp; !p.getSurname().equals(<span class="string">"Cole"</span>)) &#123;</span><br><span class="line">iter.remove();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Iterator&lt;Person&gt; iter = people.iterator();</span><br><span class="line"><span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">Person p = iter.next();</span><br><span class="line"><span class="keyword">if</span> (p.getSurname().equals(<span class="string">"Wright-Phillips"</span>)) &#123;</span><br><span class="line">iter.remove();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iterate through hash set</span></span><br><span class="line">Iterator&lt;Person&gt; i = people.iterator();</span><br><span class="line"><span class="keyword">while</span> (i.hasNext()) &#123;</span><br><span class="line">Person p = i.next();</span><br><span class="line">System.out.print(p);</span><br><span class="line">System.out.print(<span class="string">", hash code "</span>);</span><br><span class="line">System.out.println(p.hashCode());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"Using a comparator of a person class :"</span>);</span><br><span class="line">Person firstPerson = people.iterator().next();<span class="comment">//grab the first one</span></span><br><span class="line"><span class="keyword">for</span> (Person p : people)</span><br><span class="line">System.out.println(firstPerson + <span class="string">" compared to "</span> + p + <span class="string">" returns "</span> + firstPerson.compareTo(p));</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"Using AgeComparator :"</span>);</span><br><span class="line">Comparator&lt;Person&gt; comparator = <span class="keyword">new</span> AgeComparator();</span><br><span class="line">firstPerson = people.iterator().next();<span class="comment">//grab the first one</span></span><br><span class="line"><span class="keyword">for</span> (Person p : people)</span><br><span class="line">System.out.println(firstPerson + <span class="string">" compared to "</span> + p + <span class="string">" returns "</span> + comparator.compare(firstPerson, p));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AgeComparator</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">Person</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Person a, Person b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> b.getAge() - a.getAge();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Shakespeare.java</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Reads information from Shakespeare.txt</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shakespeare</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">String line;</span><br><span class="line">String wd;</span><br><span class="line">StringTokenizer st;</span><br><span class="line">List&lt;String&gt; words = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Read data from file and split into tokens, i.e. words</span></span><br><span class="line"><span class="comment">// (The try/catch construction catches an exception, ie. error, </span></span><br><span class="line"><span class="comment">// if the file is not found)</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Scanner file = <span class="keyword">new</span> Scanner(<span class="keyword">new</span> File(<span class="string">"Shakespeare.txt"</span>));</span><br><span class="line"><span class="comment">// read in each line, and split into tokens</span></span><br><span class="line"><span class="keyword">while</span> (file.hasNext()) &#123;</span><br><span class="line">line = file.next();</span><br><span class="line">st = <span class="keyword">new</span> StringTokenizer(line, <span class="string">" .,:?'"</span>);</span><br><span class="line"><span class="comment">// space, full stop, comma, etc.</span></span><br><span class="line"><span class="comment">// are included as token delimiters</span></span><br><span class="line"><span class="comment">// and are thus not tokens themselves</span></span><br><span class="line"><span class="keyword">while</span> (st.hasMoreTokens()) &#123;</span><br><span class="line">wd = st.nextToken();</span><br><span class="line">words.add(wd);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">file.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"words: "</span> + words);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line"><span class="keyword">if</span> (word.charAt(<span class="number">0</span>) == <span class="string">'a'</span>)</span><br><span class="line">System.out.print(word + <span class="string">", "</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Produce a sorted list</span></span><br><span class="line">Set&lt;String&gt; wds = <span class="keyword">new</span> TreeSet&lt;String&gt;(<span class="keyword">new</span> StringComparator());</span><br><span class="line"></span><br><span class="line">wds.addAll(words);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"sorted words: "</span> + wds);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; lowerWords = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line"><span class="keyword">for</span> (String word : words)</span><br><span class="line">lowerWords.add(word.toLowerCase());</span><br><span class="line"></span><br><span class="line">Set&lt;String&gt; lowerWds = <span class="keyword">new</span> TreeSet&lt;String&gt;(<span class="keyword">new</span> StringComparator());</span><br><span class="line"></span><br><span class="line">lowerWds.addAll(lowerWords);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (String word : lowerWds)</span><br><span class="line">System.out.println(word + <span class="string">": "</span> + Collections.frequency(lowerWords, word));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/11/18 11:40.</span></span><br><span class="line"><span class="comment"> * Last modified 12/11/18 11:40.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringComparator</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(String o1, String o2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> o1.compareTo(o2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/11/18 14:40.</span></span><br><span class="line"><span class="comment"> * Last modified 12/11/18 14:40.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListAgain</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">List&lt;Integer&gt; listA = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">listA.add(<span class="number">1</span>);</span><br><span class="line">listA.add(<span class="number">2</span>);</span><br><span class="line">listA.add(<span class="number">3</span>);</span><br><span class="line">listA.add(<span class="number">4</span>);</span><br><span class="line">listA.add(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">List&lt;Integer&gt; listB = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">listB.add(<span class="number">3</span>);</span><br><span class="line">listB.add(<span class="number">4</span>);</span><br><span class="line">listB.add(<span class="number">5</span>);</span><br><span class="line">listB.add(<span class="number">6</span>);</span><br><span class="line">listB.add(<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">List&lt;Integer&gt; listC = <span class="keyword">new</span> ArrayList&lt;&gt;(listA);</span><br><span class="line"></span><br><span class="line">listC.retainAll(listB);</span><br><span class="line"></span><br><span class="line">listA.addAll(listB);</span><br><span class="line">listA.removeAll(listC);</span><br><span class="line"></span><br><span class="line">System.out.println(listA);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 12/11/18 15:26.</span></span><br><span class="line"><span class="comment"> * Last modified 12/11/18 15:26.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ListIterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MoreList</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">LinkedList&lt;Integer&gt; listA = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">listA.add(<span class="number">0</span>);</span><br><span class="line">listA.add(<span class="number">1</span>);</span><br><span class="line">listA.add(<span class="number">2</span>);</span><br><span class="line">listA.add(<span class="number">3</span>);</span><br><span class="line">listA.add(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">List&lt;Integer&gt; listB = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">listB.add(<span class="number">5</span>);</span><br><span class="line">listB.add(<span class="number">6</span>);</span><br><span class="line">listB.add(<span class="number">7</span>);</span><br><span class="line">listB.add(<span class="number">8</span>);</span><br><span class="line">listB.add(<span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">ListIterator&lt;Integer&gt; iteratorA;</span><br><span class="line">ListIterator&lt;Integer&gt; iteratorB;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line">iteratorA = listA.listIterator();</span><br><span class="line">iteratorB = listB.listIterator();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (iteratorA.hasNext()) &#123;</span><br><span class="line">iteratorA.next();</span><br><span class="line"><span class="keyword">if</span> (iteratorB.hasNext())</span><br><span class="line">iteratorA.add(iteratorB.next());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (iteratorB.hasNext()) &#123;</span><br><span class="line">iteratorA.add(iteratorB.next());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"List A="</span> + listA);</span><br><span class="line">System.out.println(<span class="string">"List B="</span> + listB);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line">iteratorB = listB.listIterator();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (iteratorB.hasNext()) &#123;</span><br><span class="line">iteratorB.next();</span><br><span class="line"><span class="keyword">if</span> (iteratorB.hasNext()) &#123;</span><br><span class="line">iteratorB.next();</span><br><span class="line">iteratorB.remove();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"List A="</span> + listA);</span><br><span class="line">System.out.println(<span class="string">"List B="</span> + listB);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line">listA.removeAll(listB);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"List A="</span> + listA);</span><br><span class="line">System.out.println(<span class="string">"List B="</span> + listB);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Developed by Neo on 12/11/18 10:21.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Last modified 12/11/18 10:21.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Copyright (c) 2018. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ListStringConvert&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;String&amp;gt; fixedList = Arrays.asList(&lt;span class=&quot;string&quot;&gt;&quot;elephant&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;lion&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;leopard&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;tiger&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(fixedList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;String&amp;gt; myList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedList&amp;lt;String&amp;gt;(fixedList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//		Iterator&amp;lt;String&amp;gt; iter = myList.iterator();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ListIterator&amp;lt;String&amp;gt; iter = myList.listIterator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ArrayList&amp;lt;String&amp;gt; newList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (iter.hasNext()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			newList.add(iter.next().toUpperCase());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(newList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Java" scheme="https://real-neo.me/tags/Java/"/>
    
      <category term="COM6516" scheme="https://real-neo.me/tags/COM6516/"/>
    
  </entry>
  
  <entry>
    <title>COM6516 Week07</title>
    <link href="https://real-neo.me/COM6516-Week07.html"/>
    <id>https://real-neo.me/COM6516-Week07.html</id>
    <published>2018-11-12T10:46:42.000Z</published>
    <updated>2019-03-13T23:22:06.776Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 05/11/18 11:12.</span></span><br><span class="line"><span class="comment"> * Last modified 05/11/18 10:39.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sheffield.EasyReader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This class can generate a walking plan for a old person</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenerateWalkingPlan</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Program starts here.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args command line arguments.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Ask for user's name and age for creating plan</span></span><br><span class="line">EasyReader myReader = <span class="keyword">new</span> EasyReader();</span><br><span class="line"></span><br><span class="line">String name = myReader.readString(<span class="string">"What is your name? "</span>);</span><br><span class="line"><span class="keyword">int</span> age = myReader.readInt(<span class="string">"Hello "</span> + name + <span class="string">", how old are you? "</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a walk plan and print it</span></span><br><span class="line">WalkingPlan newPlan = <span class="keyword">new</span> WalkingPlan(name, age);</span><br><span class="line"></span><br><span class="line">newPlan.generate();</span><br><span class="line">newPlan.toPrint();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Developed by Neo on 05/11/18 11:10.</span></span><br><span class="line"><span class="comment"> * Last modified 05/11/18 10:45.</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This is walk plan for old person</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WalkingPlan</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This plan only contains 14 days plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PLAN_DAYS = <span class="number">14</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * We define more than 1500 meters as hard day</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HARD_MODE = <span class="number">1500</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * If two hard days in a row, we need change second day as relax day</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> RELAX_MODE = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * User's name</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * User's age</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Every days plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[] plan;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The total meters of whole plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> total;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Average meters of this plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">long</span> average;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Constructor method for WalkingPlan</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name user's name</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> age  user's age</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">WalkingPlan(String name, <span class="keyword">int</span> age) &#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize these variables</span></span><br><span class="line">plan = <span class="keyword">new</span> <span class="keyword">int</span>[PLAN_DAYS];</span><br><span class="line">total = <span class="number">0</span>;</span><br><span class="line">average = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This method will generate a waling plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Random random = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; PLAN_DAYS; i++) &#123;</span><br><span class="line">plan[i] = <span class="number">10</span> * (<span class="number">10</span> + random.nextInt(<span class="number">240</span>)); <span class="comment">// Generate a int in [100, 2500)</span></span><br><span class="line"><span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (plan[i] &gt; HARD_MODE &amp;&amp; plan[i - <span class="number">1</span>] &gt; HARD_MODE)</span><br><span class="line">plan[i] = RELAX_MODE;</span><br><span class="line">&#125;</span><br><span class="line">total += plan[i];</span><br><span class="line">&#125;</span><br><span class="line">average = Math.round((<span class="keyword">double</span>) total / PLAN_DAYS);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This method will print walking plan</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toPrint</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println();</span><br><span class="line">System.out.println(name + <span class="string">"(age="</span> + age + <span class="string">") - this is your walking plan:"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; PLAN_DAYS; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"Day "</span> + (i + <span class="number">1</span>) + <span class="string">": walk "</span> + plan[i] + <span class="string">"m"</span>);</span><br><span class="line"><span class="keyword">if</span> (plan[i] &gt; HARD_MODE)</span><br><span class="line">System.out.println(<span class="string">" &lt;--- hard"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"Total number of meters walked = "</span> + total);</span><br><span class="line">System.out.println(<span class="string">"Average number of meters walked per day = "</span> + average);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Developed by Neo on 05/11/18 11:12.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Last modified 05/11/18 10:39.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Copyright (c) 2018. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sheffield.EasyReader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * This class can generate a walking plan for a old person&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GenerateWalkingPlan&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * Program starts here.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; args command line arguments.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Ask for user&#39;s name and age for creating plan&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		EasyReader myReader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EasyReader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String name = myReader.readString(&lt;span class=&quot;string&quot;&gt;&quot;What is your name? &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age = myReader.readInt(&lt;span class=&quot;string&quot;&gt;&quot;Hello &quot;&lt;/span&gt; + name + &lt;span class=&quot;string&quot;&gt;&quot;, how old are you? &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Create a walk plan and print it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		WalkingPlan newPlan = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WalkingPlan(name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		newPlan.generate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		newPlan.toPrint();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Java" scheme="https://real-neo.me/tags/Java/"/>
    
      <category term="COM6516" scheme="https://real-neo.me/tags/COM6516/"/>
    
  </entry>
  
  <entry>
    <title>COM6506 Week07</title>
    <link href="https://real-neo.me/COM6506-Week07.html"/>
    <id>https://real-neo.me/COM6506-Week07.html</id>
    <published>2018-11-04T23:17:35.000Z</published>
    <updated>2019-03-16T04:18:41.931Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <h2 id="Diamond-Gate"><a href="#Diamond-Gate" class="headerlink" title="Diamond Gate"></a>Diamond Gate</h2>          </div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> diamond;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DiamondGate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> DiamondGateState state;</span><br><span class="line"><span class="keyword">private</span> Collection&lt;String&gt; registered;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> visitors;</span><br><span class="line"><span class="keyword">private</span> Collection&lt;String&gt; overdue, bookList;</span><br><span class="line"></span><br><span class="line">DiamondGate(Collection&lt;String&gt; registered, Collection&lt;String&gt; overdue) &#123;</span><br><span class="line"><span class="keyword">this</span>.registered = registered;</span><br><span class="line"><span class="keyword">this</span>.overdue = overdue;</span><br><span class="line"><span class="keyword">this</span>.bookList = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"><span class="keyword">this</span>.visitors = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>.state = <span class="keyword">new</span> Idle(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// State Machine operations</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">state.entry_scan(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">state.exit_scan(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.entry_sensor_activated();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.exit_sensor_activated();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">time_out</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.time_out();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pay_fine</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">state.pay_fine(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">return_book</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">state.return_book(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Context operations</span></span><br><span class="line"></span><br><span class="line">DiamondGateState.<span class="function">State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> state.getState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setState</span><span class="params">(DiamondGateState state)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.state = state;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isRegistered</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> registered.contains(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">incrementVisitors</span><span class="params">()</span> </span>&#123;</span><br><span class="line">visitors++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrementVisitors</span><span class="params">()</span> </span>&#123;</span><br><span class="line">visitors--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getVisitors</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> visitors;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isOverdue</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> overdue.contains(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">paid_fine</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (overdue.contains(key)) &#123;</span><br><span class="line">overdue.remove(key);</span><br><span class="line">bookList.add(key);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">returned_book</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bookList.contains(key)) &#123;</span><br><span class="line">bookList.remove(key);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> diamond;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">DiamondGateState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">enum</span> State &#123;IDLE, OPENEXIT, OPENENTRY, PAIDFINE&#125;</span><br><span class="line"></span><br><span class="line">DiamondGate context;</span><br><span class="line"></span><br><span class="line">DiamondGateState(DiamondGate context) &#123;</span><br><span class="line"><span class="keyword">this</span>.context = context;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">entry_scan</span><span class="params">(String key)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">exit_scan</span><span class="params">(String key)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">entry_sensor_activated</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">exit_sensor_activated</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">time_out</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">pay_fine</span><span class="params">(String key)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">return_book</span><span class="params">(String key)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> State <span class="title">getState</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> diamond;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertEquals;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertFalse;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertTrue;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DiamondGateTest</span> </span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testSimpleEntry</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// Create our set of registered students / staff.</span></span><br><span class="line">Collection&lt;String&gt; registered = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">registered.add(<span class="string">"ac1nw"</span>);</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; overdue = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Pass this when constructing our system under test (diamondGate);</span></span><br><span class="line">DiamondGate diamondGate = <span class="keyword">new</span> DiamondGate(registered, overdue);</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line"><span class="comment">// Now for the actual test sequence:</span></span><br><span class="line">diamondGate.entry_scan(<span class="string">"ac1nw"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// We know that ac1nw is registered.</span></span><br><span class="line">diamondGate.entry_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line"><span class="comment">// We'd expect the number of visitors in the Diamond to be 1.</span></span><br><span class="line">assertEquals(<span class="number">1</span>, diamondGate.getVisitors());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testSimpleExit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Collection&lt;String&gt; registered = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">registered.add(<span class="string">"acs18by"</span>);</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; overdue = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">DiamondGate diamondGate = <span class="keyword">new</span> DiamondGate(registered, overdue);</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.exit_scan(<span class="string">"acs18by"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.exit_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(-<span class="number">1</span>, diamondGate.getVisitors());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testEntryTimeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Collection&lt;String&gt; registered = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">registered.add(<span class="string">"acs18by"</span>);</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; overdue = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">DiamondGate diamondGate = <span class="keyword">new</span> DiamondGate(registered, overdue);</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.entry_scan(<span class="string">"acs18by"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//diamondGate.entry_sensor_activated();</span></span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testExitTimeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Collection&lt;String&gt; registered = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">registered.add(<span class="string">"acs18by"</span>);</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; overdue = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">DiamondGate diamondGate = <span class="keyword">new</span> DiamondGate(registered, overdue);</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.exit_scan(<span class="string">"acs18by"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//diamondGate.exit_sensor_activated();</span></span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testOverdue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Collection&lt;String&gt; registered = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">registered.add(<span class="string">"acs18test"</span>);</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; overdue = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">overdue.add(<span class="string">"acs18test"</span>);</span><br><span class="line"></span><br><span class="line">DiamondGate diamondGate = <span class="keyword">new</span> DiamondGate(registered, overdue);</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.entry_scan(<span class="string">"acs18test"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.entry_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">1</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">assertTrue(diamondGate.isOverdue(<span class="string">"acs18test"</span>));</span><br><span class="line"></span><br><span class="line">diamondGate.exit_scan(<span class="string">"acs18test"</span>);</span><br><span class="line">diamondGate.exit_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">1</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.pay_fine(<span class="string">"acs18test"</span>);</span><br><span class="line"></span><br><span class="line">assertFalse(diamondGate.isOverdue(<span class="string">"acs18test"</span>));</span><br><span class="line"></span><br><span class="line">assertEquals(DiamondGateState.State.PAIDFINE, diamondGate.getState());</span><br><span class="line"></span><br><span class="line">diamondGate.return_book(<span class="string">"acs18test"</span>);</span><br><span class="line"></span><br><span class="line">assertEquals(DiamondGateState.State.IDLE, diamondGate.getState());</span><br><span class="line"></span><br><span class="line">diamondGate.exit_scan(<span class="string">"acs18test"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.exit_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testNotRegisteredEntry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Collection&lt;String&gt; registered = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">registered.add(<span class="string">"acs18by"</span>);</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; overdue = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">DiamondGate diamondGate = <span class="keyword">new</span> DiamondGate(registered, overdue);</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.entry_scan(<span class="string">"acs18test"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.entry_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testMultiEntry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Collection&lt;String&gt; registered = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">registered.add(<span class="string">"acs18test1"</span>);</span><br><span class="line">registered.add(<span class="string">"acs18test2"</span>);</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; overdue = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">DiamondGate diamondGate = <span class="keyword">new</span> DiamondGate(registered, overdue);</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.entry_scan(<span class="string">"acs18test1"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.entry_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">1</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.entry_scan(<span class="string">"acs18test2"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.entry_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">2</span>, diamondGate.getVisitors());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testEntryAndExit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Collection&lt;String&gt; registered = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">registered.add(<span class="string">"acs18test1"</span>);</span><br><span class="line">registered.add(<span class="string">"acs18test2"</span>);</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; overdue = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">DiamondGate diamondGate = <span class="keyword">new</span> DiamondGate(registered, overdue);</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.entry_scan(<span class="string">"acs18test1"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.entry_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">1</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.entry_scan(<span class="string">"acs18test2"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.entry_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">2</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.exit_scan(<span class="string">"acs18test1"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.exit_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">1</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.exit_scan(<span class="string">"acs18test2"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.exit_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testMultiExit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Collection&lt;String&gt; registered = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">registered.add(<span class="string">"acs18test1"</span>);</span><br><span class="line">registered.add(<span class="string">"acs18test2"</span>);</span><br><span class="line"></span><br><span class="line">Collection&lt;String&gt; overdue = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">DiamondGate diamondGate = <span class="keyword">new</span> DiamondGate(registered, overdue);</span><br><span class="line"></span><br><span class="line">assertEquals(<span class="number">0</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.exit_scan(<span class="string">"acs18test1"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.exit_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(-<span class="number">1</span>, diamondGate.getVisitors());</span><br><span class="line"></span><br><span class="line">diamondGate.exit_scan(<span class="string">"acs18test2"</span>);</span><br><span class="line"></span><br><span class="line">diamondGate.exit_sensor_activated();</span><br><span class="line">diamondGate.time_out();</span><br><span class="line"></span><br><span class="line">assertEquals(-<span class="number">2</span>, diamondGate.getVisitors());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> diamond;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Idle</span> <span class="keyword">extends</span> <span class="title">DiamondGateState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Idle(DiamondGate context) &#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (context.isRegistered(key)) &#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> OpenEntry(context));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (context.isRegistered(key) &amp;&amp; !context.isOverdue(key)) &#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> OpenExit(context));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">time_out</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pay_fine</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (context.isOverdue(key)) &#123;</span><br><span class="line">context.paid_fine(key);</span><br><span class="line">context.setState(<span class="keyword">new</span> PaidFine(context));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">return_book</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function">State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.IDLE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> diamond;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OpenEntry</span> <span class="keyword">extends</span> <span class="title">DiamondGateState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">OpenEntry(DiamondGate context) &#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">TimerTask task = <span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.time_out();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Timer timer = <span class="keyword">new</span> Timer(<span class="string">"Timer"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> delay = <span class="number">5000L</span>;</span><br><span class="line">timer.schedule(task, delay);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.incrementVisitors();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">time_out</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> Idle(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pay_fine</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">return_book</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function">State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.OPENENTRY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> diamond;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OpenExit</span> <span class="keyword">extends</span> <span class="title">DiamondGateState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">OpenExit(DiamondGate context) &#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">TimerTask task = <span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.time_out();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Timer timer = <span class="keyword">new</span> Timer(<span class="string">"Timer"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> delay = <span class="number">5000L</span>;</span><br><span class="line">timer.schedule(task, delay);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.decrementVisitors();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">time_out</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> Idle(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pay_fine</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">return_book</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function">State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.OPENEXIT;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> diamond;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PaidFine</span> <span class="keyword">extends</span> <span class="title">DiamondGateState</span> </span>&#123;</span><br><span class="line">PaidFine(DiamondGate context) &#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_scan</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">entry_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exit_sensor_activated</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">time_out</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pay_fine</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">return_book</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">context.returned_book(key);</span><br><span class="line">context.setState(<span class="keyword">new</span> Idle(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function">State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.PAIDFINE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info">            <h2 id="TCP-Server"><a href="#TCP-Server" class="headerlink" title="TCP Server"></a>TCP Server</h2>          </div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCP</span> </span>&#123;</span><br><span class="line">TCPState state;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TCP</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.state = <span class="keyword">new</span> CLOSED(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.passive_open();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.receive_syn();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.receive_syn_ack();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.receive_fin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.receive_ack();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.receive_ack_fin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.send_syn_ack();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.send_syn();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.send_ack();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.send_fin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">state.timeout();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setState</span><span class="params">(TCPState state)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.state = state;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TCPState.<span class="function">State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> state.getState();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">enum</span> State &#123;</span><br><span class="line">CLOSED, LISTEN, SYN_RCVD, SYN_SENT, ESTABLISHED, CLOSE_WAIT,</span><br><span class="line">LAST_ACK, FIN_WAIT_1, FIN_WAIT_2, CLOSING, TIME_WAIT</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> TCP context;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TCPState</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.context = context;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> State <span class="title">getState</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CLOSED</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CLOSED</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> LISTEN(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.CLOSED;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CLOSE_WAIT</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CLOSE_WAIT</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> LAST_ACK(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.CLOSE_WAIT;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CLOSING</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CLOSING</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> TIME_WAIT(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.CLOSING;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ESTABLISHED</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ESTABLISHED</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> FIN_WAIT_1(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> CLOSE_WAIT(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.ESTABLISHED;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FIN_WAIT_1</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FIN_WAIT_1</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> CLOSING(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> TIME_WAIT(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> FIN_WAIT_2(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.FIN_WAIT_1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FIN_WAIT_2</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FIN_WAIT_2</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> TIME_WAIT(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.FIN_WAIT_2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LAST_ACK</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LAST_ACK</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> CLOSED(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.LAST_ACK;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LISTEN</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LISTEN</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> CLOSED(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> SYN_RCVD(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> SYN_SENT(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.LISTEN;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SYN_RCVD</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SYN_RCVD</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> FIN_WAIT_1(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> ESTABLISHED(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.SYN_RCVD;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SYN_SENT</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SYN_SENT</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> SYN_RCVD(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> ESTABLISHED(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.SYN_SENT;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TIME_WAIT</span> <span class="keyword">extends</span> <span class="title">TCPState</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TIME_WAIT</span><span class="params">(TCP context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">TimerTask task = <span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.timeout();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Timer timer = <span class="keyword">new</span> Timer(<span class="string">"Timer"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> delay = <span class="number">5000L</span>;</span><br><span class="line">timer.schedule(task, delay);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passive_open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive_ack_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_syn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_ack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_fin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">timeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">context.setState(<span class="keyword">new</span> CLOSED(context));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> State.TIME_WAIT;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertEquals;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TCPTest</span> </span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testTCP1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">TCP tcp = <span class="keyword">new</span> TCP();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.passive_open();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.LISTEN, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_syn();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.SYN_RCVD, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.send_ack();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.ESTABLISHED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_fin();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSE_WAIT, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.close();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.LAST_ACK, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_ack();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testTCP2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">TCP tcp = <span class="keyword">new</span> TCP();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.passive_open();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.LISTEN, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.send_syn();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.SYN_SENT, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_syn_ack();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.ESTABLISHED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.close();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.FIN_WAIT_1, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_fin();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSING, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_ack();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.TIME_WAIT, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.timeout();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testTCP3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">TCP tcp = <span class="keyword">new</span> TCP();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.passive_open();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.LISTEN, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.send_syn();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.SYN_SENT, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_syn();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.SYN_RCVD, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.close();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.FIN_WAIT_1, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.send_ack();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.FIN_WAIT_2, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_fin();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.TIME_WAIT, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.timeout();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testTCP4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">TCP tcp = <span class="keyword">new</span> TCP();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.passive_open();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.LISTEN, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_syn();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.SYN_RCVD, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.close();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.FIN_WAIT_1, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_ack_fin();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.TIME_WAIT, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.timeout();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testTCP5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">TCP tcp = <span class="keyword">new</span> TCP();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.passive_open();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.LISTEN, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_syn();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.SYN_RCVD, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.send_ack();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.ESTABLISHED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.close();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.FIN_WAIT_1, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.receive_ack_fin();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.TIME_WAIT, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"-&gt;"</span>);</span><br><span class="line"></span><br><span class="line">tcp.timeout();</span><br><span class="line">System.out.print(tcp.getState());</span><br><span class="line">assertEquals(TCPState.State.CLOSED, tcp.getState());</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;h2 id=&quot;Diamond-Gate&quot;&gt;&lt;a href=&quot;#Diamond-Gate&quot; class=&quot;headerlink&quot; title=&quot;Diamond Gate&quot;&gt;&lt;/a&gt;Diamond Gate&lt;/h2&gt;
          &lt;/div&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; diamond;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Collection;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.HashSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DiamondGate&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; DiamondGateState state;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Collection&amp;lt;String&amp;gt; registered;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; visitors;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Collection&amp;lt;String&amp;gt; overdue, bookList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	DiamondGate(Collection&amp;lt;String&amp;gt; registered, Collection&amp;lt;String&amp;gt; overdue) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.registered = registered;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.overdue = overdue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.bookList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.visitors = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Idle(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// State Machine operations&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;entry_scan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		state.entry_scan(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;exit_scan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		state.exit_scan(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;entry_sensor_activated&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		state.entry_sensor_activated();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;exit_sensor_activated&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		state.exit_sensor_activated();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;time_out&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		state.time_out();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pay_fine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		state.pay_fine(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;return_book&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		state.return_book(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Context operations&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	DiamondGateState.&lt;span class=&quot;function&quot;&gt;State &lt;span class=&quot;title&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; state.getState();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DiamondGateState state)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state = state;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isRegistered&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; registered.contains(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;incrementVisitors&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		visitors++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;decrementVisitors&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		visitors--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getVisitors&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; visitors;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isOverdue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; overdue.contains(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;paid_fine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (overdue.contains(key)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			overdue.remove(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			bookList.add(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;returned_book&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bookList.contains(key)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			bookList.remove(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Java" scheme="https://real-neo.me/tags/Java/"/>
    
      <category term="COM6506" scheme="https://real-neo.me/tags/COM6506/"/>
    
  </entry>
  
  <entry>
    <title>COM6516 Week05</title>
    <link href="https://real-neo.me/COM6516-Week05.html"/>
    <id>https://real-neo.me/COM6516-Week05.html</id>
    <published>2018-10-22T23:10:11.000Z</published>
    <updated>2019-03-13T23:22:14.918Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Multiplication table</span></span><br><span class="line"><span class="comment"> * Create a table to show 1 to 9 multiplication.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultiplicationTable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * World starts here</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args Command line arguments</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">9</span>;</span><br><span class="line">System.out.print(<span class="string">"  |"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">System.out.printf(<span class="string">"%4d"</span>, i + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">System.out.print(<span class="string">"---"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"----"</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"--"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">System.out.print((i + <span class="number">1</span>) + <span class="string">" |"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; num; j++) &#123;</span><br><span class="line">System.out.printf(<span class="string">"%4d"</span>, (i + <span class="number">1</span>) * (j + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Test Circle class</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCircle</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * World starts here</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args Command line arguments</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(Circle.PI);</span><br><span class="line">System.out.println(Circle.radToDeg(<span class="number">3.141</span>));</span><br><span class="line"></span><br><span class="line">Circle myCircle = <span class="keyword">new</span> Circle(<span class="number">1</span>);</span><br><span class="line">System.out.println(myCircle.toString());</span><br><span class="line">System.out.println(myCircle.getClass());</span><br><span class="line"></span><br><span class="line">Circle myCircle2 = <span class="keyword">new</span> Circle(<span class="number">1</span>);</span><br><span class="line">System.out.println(myCircle.equals(myCircle2));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Circle.java</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Copyright (c) University of Sheffield 2014</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// class field</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.1415927</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// instance field</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">double</span> radius;</span><br><span class="line"></span><br><span class="line"><span class="comment">// constructor</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Circle</span><span class="params">(<span class="keyword">double</span> r)</span> </span>&#123;</span><br><span class="line">radius = r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// class method</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">radToDeg</span><span class="params">(<span class="keyword">double</span> angleRad)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> angleRad * <span class="number">180.0</span> / PI;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// instance methods</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">area</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// returns area of the circle</span></span><br><span class="line"><span class="keyword">return</span> PI * radius * radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">circumference</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// returns circumference of the circle</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">2.0</span> * PI * radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Circle radius: "</span> + radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Check if the two objects' class are same, then if the references are same</span></span><br><span class="line"><span class="keyword">return</span> obj.getClass() == <span class="keyword">this</span>.getClass() &amp;&amp; obj == <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhDThesis</span> <span class="keyword">extends</span> <span class="title">Publication</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> numChapters;</span><br><span class="line"><span class="keyword">private</span> String university;</span><br><span class="line"><span class="keyword">private</span> String supervisor;</span><br><span class="line"></span><br><span class="line">PhDThesis(String title, String author, <span class="keyword">int</span> ISBN, <span class="keyword">int</span> numPages, <span class="keyword">int</span> numChapters, String university, String supervisor) &#123;</span><br><span class="line"><span class="keyword">super</span>(title, author, ISBN, numPages);</span><br><span class="line"><span class="keyword">this</span>.numChapters = numChapters;</span><br><span class="line"><span class="keyword">this</span>.university = university;</span><br><span class="line"><span class="keyword">this</span>.supervisor = supervisor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.toString() + <span class="string">"[numChapters="</span> + numChapters +</span><br><span class="line"><span class="string">",university=\""</span> + university + <span class="string">"\",supervisor=\""</span> + supervisor + <span class="string">"\"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPublication</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Publication publication = <span class="keyword">new</span> Publication();</span><br><span class="line">Book book = <span class="keyword">new</span> Book(<span class="string">"Test Book"</span>, <span class="string">"Test Author"</span>, <span class="number">10000</span>, <span class="number">1000</span>, <span class="number">100</span>);</span><br><span class="line">MagazineArticle magazineArticle = <span class="keyword">new</span> MagazineArticle(<span class="string">"Test Mag"</span>, <span class="string">"Test Author"</span>, <span class="number">10001</span>, <span class="number">10</span>, <span class="string">"Test Name"</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">PhDThesis phDThesis = <span class="keyword">new</span> PhDThesis(<span class="string">"Test Title"</span>, <span class="string">"Neo"</span>, <span class="number">10002</span>, <span class="number">100</span>, <span class="number">10</span>, <span class="string">"UoS"</span>, <span class="string">"Anand"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(publication.toString());</span><br><span class="line">System.out.println(book.toString());</span><br><span class="line">System.out.println(magazineArticle.toString());</span><br><span class="line">System.out.println(phDThesis.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create a random number table</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomTable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * World starts here</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args Command line arguments</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Random random = <span class="keyword">new</span> Random(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">ArrayList&lt;Integer&gt; columns = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (columns.size() &lt; num) &#123;</span><br><span class="line"><span class="keyword">int</span> randomNum = random.nextInt(num + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (randomNum &gt; <span class="number">0</span> &amp;&amp; !columns.contains(randomNum)) &#123;</span><br><span class="line">columns.add(randomNum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ArrayList&lt;Integer&gt; rows = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (rows.size() &lt; num) &#123;</span><br><span class="line"><span class="keyword">int</span> randomNum = random.nextInt(num + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (randomNum &gt; <span class="number">0</span> &amp;&amp; !rows.contains(randomNum)) &#123;</span><br><span class="line">rows.add(randomNum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"  |"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">System.out.printf(<span class="string">"%4d"</span>, columns.get(i));</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">System.out.print(<span class="string">"---"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"----"</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"--"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">System.out.print(rows.get(i) + <span class="string">" |"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; num; j++) &#123;</span><br><span class="line">System.out.printf(<span class="string">"%4d"</span>, rows.get(i) * columns.get(j));</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Multiplication table&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Create a table to show 1 to 9 multiplication.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MultiplicationTable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * World starts here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; args Command line arguments&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;  |&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; num; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.printf(&lt;span class=&quot;string&quot;&gt;&quot;%4d&quot;&lt;/span&gt;, i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;---&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; num; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;----&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;--&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; num; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.print((i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&quot; |&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; num; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				System.out.printf(&lt;span class=&quot;string&quot;&gt;&quot;%4d&quot;&lt;/span&gt;, (i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * (j + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Code" scheme="https://real-neo.me/categories/Code/"/>
    
    
      <category term="Java" scheme="https://real-neo.me/tags/Java/"/>
    
      <category term="COM6516" scheme="https://real-neo.me/tags/COM6516/"/>
    
  </entry>
  
</feed>
